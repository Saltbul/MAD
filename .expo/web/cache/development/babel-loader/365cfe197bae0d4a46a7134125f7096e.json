{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar UselessTextInput = function UselessTextInput(props) {\n  return _jsx(TextInput, _objectSpread(_objectSpread({}, props), {}, {\n    editable: true,\n    maxLength: 200\n  }));\n};\nvar TextInputMultiline = function TextInputMultiline() {\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    value = _React$useState2[0],\n    _onChangeText = _React$useState2[1];\n\n  return _jsx(View, {\n    style: {\n      backgroundColor: \"#e8e8e8\",\n      borderWidth: 1,\n      borderRadius: 5,\n      borderColor: \"#e8e8e8\",\n      marginHorizontal: 20\n    },\n    children: _jsx(UselessTextInput, {\n      multiline: true,\n      numberOfLines: 10,\n      onChangeText: function onChangeText(text) {\n        return _onChangeText(text);\n      },\n      value: value,\n      style: {\n        padding: 10\n      }\n    })\n  });\n};\nexport default TextInputMultiline;","map":{"version":3,"names":["React","UselessTextInput","props","TextInputMultiline","useState","value","onChangeText","backgroundColor","borderWidth","borderRadius","borderColor","marginHorizontal","text","padding"],"sources":["/project/home/saltbul/workspace/Components/multilineBox.js"],"sourcesContent":["import React from 'react';\nimport { View, TextInput } from 'react-native';\n\nconst UselessTextInput = (props) => {\n  return (\n    <TextInput\n      {...props} // Inherit any props passed to it; e.g., multiline, numberOfLines below\n      editable\n      maxLength={200}\n    />\n  );\n}\n\nconst TextInputMultiline = () => {\n  const [value, onChangeText] = React.useState('');\n\n  // If you type something in the text box that is a color, the background will change to that\n  // color.\n  return (\n    <View\n      style={{\n        backgroundColor: \"#e8e8e8\",\n        borderWidth: 1,\n        borderRadius:5,\n        borderColor:\"#e8e8e8\",\n        marginHorizontal:20,\n      }}>\n      <UselessTextInput\n        multiline\n        numberOfLines={10}\n        onChangeText={text => onChangeText(text)}\n        value={value}\n        style={{padding: 10}}\n      />\n    </View>\n  );\n}\nexport default TextInputMultiline;"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAG1B,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,CAAIC,KAAK,EAAK;EAClC,OACE,KAAC,SAAS,kCACJA,KAAK;IACT,QAAQ;IACR,SAAS,EAAE;EAAI,GACf;AAEN,CAAC;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,GAAS;EAC/B,sBAA8BH,KAAK,CAACI,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAzCC,KAAK;IAAEC,aAAY;;EAI1B,OACE,KAAC,IAAI;IACH,KAAK,EAAE;MACLC,eAAe,EAAE,SAAS;MAC1BC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAC,CAAC;MACdC,WAAW,EAAC,SAAS;MACrBC,gBAAgB,EAAC;IACnB,CAAE;IAAA,UACF,KAAC,gBAAgB;MACf,SAAS;MACT,aAAa,EAAE,EAAG;MAClB,YAAY,EAAE,sBAAAC,IAAI;QAAA,OAAIN,aAAY,CAACM,IAAI,CAAC;MAAA,CAAC;MACzC,KAAK,EAAEP,KAAM;MACb,KAAK,EAAE;QAACQ,OAAO,EAAE;MAAE;IAAE;EACrB,EACG;AAEX,CAAC;AACD,eAAeV,kBAAkB"},"metadata":{},"sourceType":"module"}