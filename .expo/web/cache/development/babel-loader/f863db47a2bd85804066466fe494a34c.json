{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport XDate from 'xdate';\nimport React, { useRef, useState, useCallback, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { sameMonth } from \"../../dateutils\";\nimport { xdateToData } from \"../../interface\";\nimport { useDidUpdate } from \"../../hooks\";\nimport { UpdateSources } from \"../commons\";\nimport styleConstructor from \"../style\";\nimport CalendarContext from \"./index\";\nimport TodayButton from \"./todayButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CalendarProvider = function CalendarProvider(props) {\n  var theme = props.theme,\n    date = props.date,\n    onDateChanged = props.onDateChanged,\n    onMonthChange = props.onMonthChange,\n    _props$showTodayButto = props.showTodayButton,\n    showTodayButton = _props$showTodayButto === void 0 ? false : _props$showTodayButto,\n    disabledOpacity = props.disabledOpacity,\n    todayBottomMargin = props.todayBottomMargin,\n    todayButtonStyle = props.todayButtonStyle,\n    propsStyle = props.style,\n    numberOfDays = props.numberOfDays,\n    _props$timelineLeftIn = props.timelineLeftInset,\n    timelineLeftInset = _props$timelineLeftIn === void 0 ? 72 : _props$timelineLeftIn,\n    children = props.children;\n  var style = useRef(styleConstructor(theme));\n  var todayButton = useRef();\n  var prevDate = useRef(date);\n  var currDate = useRef(date);\n  var _useState = useState(date),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentDate = _useState2[0],\n    setCurrentDate = _useState2[1];\n  var _useState3 = useState(UpdateSources.CALENDAR_INIT),\n    _useState4 = _slicedToArray(_useState3, 2),\n    updateSource = _useState4[0],\n    setUpdateSource = _useState4[1];\n  var wrapperStyle = useMemo(function () {\n    return [style.current.contextWrapper, propsStyle];\n  }, [style, propsStyle]);\n  useDidUpdate(function () {\n    if (date) {\n      _setDate(date, UpdateSources.PROP_UPDATE);\n    }\n  }, [date]);\n  var _setDate = useCallback(function (date, updateSource) {\n    prevDate.current = currDate.current;\n    currDate.current = date;\n    setCurrentDate(date);\n    setUpdateSource(updateSource);\n    onDateChanged == null ? void 0 : onDateChanged(date, updateSource);\n    if (!sameMonth(new XDate(date), new XDate(prevDate.current))) {\n      onMonthChange == null ? void 0 : onMonthChange(xdateToData(new XDate(date)), updateSource);\n    }\n  }, [onDateChanged, onMonthChange]);\n  var _setDisabled = useCallback(function (disabled) {\n    if (showTodayButton) {\n      var _todayButton$current;\n      (_todayButton$current = todayButton.current) == null ? void 0 : _todayButton$current.disable(disabled);\n    }\n  }, [showTodayButton]);\n  var contextValue = useMemo(function () {\n    return {\n      date: currentDate,\n      prevDate: prevDate.current,\n      updateSource: updateSource,\n      setDate: _setDate,\n      setDisabled: _setDisabled,\n      numberOfDays: numberOfDays,\n      timelineLeftInset: timelineLeftInset\n    };\n  }, [currentDate, updateSource, numberOfDays, _setDisabled]);\n  var renderTodayButton = function renderTodayButton() {\n    return _jsx(TodayButton, {\n      ref: todayButton,\n      disabledOpacity: disabledOpacity,\n      margin: todayBottomMargin,\n      style: todayButtonStyle,\n      theme: theme\n    });\n  };\n  return _jsxs(CalendarContext.Provider, {\n    value: contextValue,\n    children: [_jsx(View, {\n      style: wrapperStyle,\n      children: children\n    }), showTodayButton && renderTodayButton()]\n  });\n};\nexport default CalendarProvider;\nCalendarProvider.displayName = 'CalendarProvider';","map":{"version":3,"names":["XDate","React","useRef","useState","useCallback","useMemo","sameMonth","xdateToData","useDidUpdate","UpdateSources","styleConstructor","CalendarContext","TodayButton","CalendarProvider","props","theme","date","onDateChanged","onMonthChange","showTodayButton","disabledOpacity","todayBottomMargin","todayButtonStyle","propsStyle","style","numberOfDays","timelineLeftInset","children","todayButton","prevDate","currDate","currentDate","setCurrentDate","CALENDAR_INIT","updateSource","setUpdateSource","wrapperStyle","current","contextWrapper","_setDate","PROP_UPDATE","_setDisabled","disabled","disable","contextValue","setDate","setDisabled","renderTodayButton","displayName"],"sources":["/project/home/saltbul/workspace/node_modules/react-native-calendars/src/expandableCalendar/Context/Provider.js"],"sourcesContent":["import XDate from 'xdate';\nimport React, { useRef, useState, useCallback, useMemo } from 'react';\nimport { View } from 'react-native';\nimport { sameMonth } from '../../dateutils';\nimport { xdateToData } from '../../interface';\nimport { useDidUpdate } from '../../hooks';\nimport { UpdateSources } from '../commons';\nimport styleConstructor from '../style';\nimport CalendarContext from './index';\nimport TodayButton from './todayButton';\n/**\n * @description: Calendar context provider component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nconst CalendarProvider = (props) => {\n    const { theme, date, onDateChanged, onMonthChange, showTodayButton = false, disabledOpacity, todayBottomMargin, todayButtonStyle, style: propsStyle, numberOfDays, timelineLeftInset = 72, children } = props;\n    const style = useRef(styleConstructor(theme));\n    const todayButton = useRef();\n    const prevDate = useRef(date);\n    const currDate = useRef(date); // for setDate only to keep prevDate up to date\n    const [currentDate, setCurrentDate] = useState(date);\n    const [updateSource, setUpdateSource] = useState(UpdateSources.CALENDAR_INIT);\n    const wrapperStyle = useMemo(() => {\n        return [style.current.contextWrapper, propsStyle];\n    }, [style, propsStyle]);\n    useDidUpdate(() => {\n        if (date) {\n            _setDate(date, UpdateSources.PROP_UPDATE);\n        }\n    }, [date]);\n    const _setDate = useCallback((date, updateSource) => {\n        prevDate.current = currDate.current;\n        currDate.current = date;\n        setCurrentDate(date);\n        setUpdateSource(updateSource);\n        onDateChanged?.(date, updateSource);\n        if (!sameMonth(new XDate(date), new XDate(prevDate.current))) {\n            onMonthChange?.(xdateToData(new XDate(date)), updateSource);\n        }\n    }, [onDateChanged, onMonthChange]);\n    const _setDisabled = useCallback((disabled) => {\n        if (showTodayButton) {\n            todayButton.current?.disable(disabled);\n        }\n    }, [showTodayButton]);\n    const contextValue = useMemo(() => {\n        return {\n            date: currentDate,\n            prevDate: prevDate.current,\n            updateSource: updateSource,\n            setDate: _setDate,\n            setDisabled: _setDisabled,\n            numberOfDays,\n            timelineLeftInset\n        };\n    }, [currentDate, updateSource, numberOfDays, _setDisabled]);\n    const renderTodayButton = () => {\n        return (<TodayButton ref={todayButton} disabledOpacity={disabledOpacity} margin={todayBottomMargin} style={todayButtonStyle} theme={theme}/>);\n    };\n    return (<CalendarContext.Provider value={contextValue}>\n      <View style={wrapperStyle}>{children}</View>\n      {showTodayButton && renderTodayButton()}\n    </CalendarContext.Provider>);\n};\nexport default CalendarProvider;\nCalendarProvider.displayName = 'CalendarProvider';\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}