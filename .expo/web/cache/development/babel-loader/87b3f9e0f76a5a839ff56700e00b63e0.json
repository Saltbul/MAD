{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _this = this;\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport isEmpty from 'lodash/isEmpty';\nimport React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport constants from \"../commons/constants\";\nimport { page, isGTE, isLTE, sameMonth } from \"../dateutils\";\nimport { xdateToData, parseDate, toMarkingFormat } from \"../interface\";\nimport { getState } from \"../day-state-manager\";\nimport { extractHeaderProps, extractDayProps } from \"../componentUpdater\";\nimport { useDidUpdate } from \"../hooks\";\nimport styleConstructor from \"./style\";\nimport CalendarHeader from \"./header\";\nimport Day from \"./day/index\";\nimport BasicDay from \"./day/basic\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Calendar = function Calendar(props) {\n  var initialDate = props.initialDate,\n    current = props.current,\n    theme = props.theme,\n    markedDates = props.markedDates,\n    minDate = props.minDate,\n    maxDate = props.maxDate,\n    allowSelectionOutOfRange = props.allowSelectionOutOfRange,\n    onDayPress = props.onDayPress,\n    onDayLongPress = props.onDayLongPress,\n    onMonthChange = props.onMonthChange,\n    onVisibleMonthsChange = props.onVisibleMonthsChange,\n    disableMonthChange = props.disableMonthChange,\n    enableSwipeMonths = props.enableSwipeMonths,\n    hideExtraDays = props.hideExtraDays,\n    firstDay = props.firstDay,\n    showSixWeeks = props.showSixWeeks,\n    displayLoadingIndicator = props.displayLoadingIndicator,\n    customHeader = props.customHeader,\n    headerStyle = props.headerStyle,\n    accessibilityElementsHidden = props.accessibilityElementsHidden,\n    importantForAccessibility = props.importantForAccessibility,\n    testID = props.testID,\n    propsStyle = props.style;\n  var _useState = useState(current || initialDate ? parseDate(current || initialDate) : new XDate()),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentMonth = _useState2[0],\n    setCurrentMonth = _useState2[1];\n  var style = useRef(styleConstructor(theme));\n  var header = useRef();\n  var weekNumberMarking = useRef({\n    disabled: true,\n    disableTouchEvent: true\n  });\n  useEffect(function () {\n    if (initialDate) {\n      setCurrentMonth(parseDate(initialDate));\n    }\n  }, [initialDate]);\n  useDidUpdate(function () {\n    var _currentMonth = currentMonth.clone();\n    onMonthChange == null ? void 0 : onMonthChange(xdateToData(_currentMonth));\n    onVisibleMonthsChange == null ? void 0 : onVisibleMonthsChange([xdateToData(_currentMonth)]);\n  }, [currentMonth]);\n  var updateMonth = useCallback(function (newMonth) {\n    if (sameMonth(newMonth, currentMonth)) {\n      return;\n    }\n    setCurrentMonth(newMonth);\n  }, [currentMonth]);\n  var addMonth = useCallback(function (count) {\n    var newMonth = currentMonth.clone().addMonths(count, true);\n    updateMonth(newMonth);\n  }, [currentMonth, updateMonth]);\n  var handleDayInteraction = useCallback(function (date, interaction) {\n    var day = new XDate(date.dateString);\n    if (allowSelectionOutOfRange || !(minDate && !isGTE(day, new XDate(minDate))) && !(maxDate && !isLTE(day, new XDate(maxDate)))) {\n      if (!disableMonthChange) {\n        updateMonth(day);\n      }\n      if (interaction) {\n        interaction(date);\n      }\n    }\n  }, [minDate, maxDate, allowSelectionOutOfRange, disableMonthChange, updateMonth]);\n  var _onDayPress = useCallback(function (date) {\n    if (date) handleDayInteraction(date, onDayPress);\n  }, [handleDayInteraction, onDayPress]);\n  var onLongPressDay = useCallback(function (date) {\n    if (date) handleDayInteraction(date, onDayLongPress);\n  }, [handleDayInteraction, onDayLongPress]);\n  var onSwipeLeft = useCallback(function () {\n    var _header$current;\n    (_header$current = header.current) == null ? void 0 : _header$current.onPressRight();\n  }, [header]);\n  var onSwipeRight = useCallback(function () {\n    var _header$current2;\n    (_header$current2 = header.current) == null ? void 0 : _header$current2.onPressLeft();\n  }, [header]);\n  var _onSwipe = useCallback(function (gestureName) {\n    var SWIPE_UP = swipeDirections.SWIPE_UP,\n      SWIPE_DOWN = swipeDirections.SWIPE_DOWN,\n      SWIPE_LEFT = swipeDirections.SWIPE_LEFT,\n      SWIPE_RIGHT = swipeDirections.SWIPE_RIGHT;\n    switch (gestureName) {\n      case SWIPE_UP:\n      case SWIPE_DOWN:\n        break;\n      case SWIPE_LEFT:\n        constants.isRTL ? onSwipeRight() : onSwipeLeft();\n        break;\n      case SWIPE_RIGHT:\n        constants.isRTL ? onSwipeLeft() : onSwipeRight();\n        break;\n    }\n  }, [onSwipeLeft, onSwipeRight]);\n  var renderWeekNumber = function renderWeekNumber(weekNumber) {\n    return _jsx(View, {\n      style: style.current.dayContainer,\n      children: _jsx(BasicDay, {\n        marking: weekNumberMarking.current\n        ,\n        theme: theme,\n        testID: testID + \".weekNumber_\" + weekNumber,\n        children: weekNumber\n      }, \"week-\" + weekNumber)\n    }, \"week-container-\" + weekNumber);\n  };\n  var renderDay = function renderDay(day, id) {\n    var dayProps = extractDayProps(props);\n    if (!sameMonth(day, currentMonth) && hideExtraDays) {\n      return _jsx(View, {\n        style: style.current.emptyDayContainer\n      }, id);\n    }\n    var dateString = toMarkingFormat(day);\n    var isControlled = isEmpty(props.context);\n    return _jsx(View, {\n      style: style.current.dayContainer,\n      children: _jsx(Day, _objectSpread(_objectSpread({}, dayProps), {}, {\n        testID: testID + \".day_\" + dateString,\n        date: dateString,\n        state: getState(day, currentMonth, props, isControlled),\n        marking: markedDates == null ? void 0 : markedDates[dateString],\n        onPress: _onDayPress,\n        onLongPress: onLongPressDay\n      }))\n    }, id);\n  };\n  var renderWeek = function renderWeek(days, id) {\n    var week = [];\n    days.forEach(function (day, id2) {\n      week.push(renderDay(day, id2));\n    }, _this);\n    if (props.showWeekNumbers) {\n      week.unshift(renderWeekNumber(days[days.length - 1].getWeek()));\n    }\n    return _jsx(View, {\n      style: style.current.week,\n      children: week\n    }, id);\n  };\n  var renderMonth = function renderMonth() {\n    var shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n    var days = page(currentMonth, firstDay, shouldShowSixWeeks);\n    var weeks = [];\n    while (days.length) {\n      weeks.push(renderWeek(days.splice(0, 7), weeks.length));\n    }\n    return _jsx(View, {\n      style: style.current.monthView,\n      children: weeks\n    });\n  };\n  var shouldDisplayIndicator = useMemo(function () {\n    if (currentMonth) {\n      var lastMonthOfDay = toMarkingFormat(currentMonth.clone().addMonths(1, true).setDate(1).addDays(-1));\n      if (displayLoadingIndicator && !(markedDates != null && markedDates[lastMonthOfDay])) {\n        return true;\n      }\n    }\n    return false;\n  }, [currentMonth, displayLoadingIndicator, markedDates]);\n  var renderHeader = function renderHeader() {\n    var headerProps = extractHeaderProps(props);\n    var ref = customHeader ? undefined : header;\n    var CustomHeader = customHeader;\n    var HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n    return _jsx(HeaderComponent, _objectSpread(_objectSpread({}, headerProps), {}, {\n      testID: testID + \".header\",\n      style: headerStyle,\n      ref: ref,\n      month: currentMonth,\n      addMonth: addMonth,\n      displayLoadingIndicator: shouldDisplayIndicator\n    }));\n  };\n  var GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n  var swipeProps = {\n    onSwipe: function onSwipe(direction) {\n      return _onSwipe(direction);\n    }\n  };\n  var gestureProps = enableSwipeMonths ? swipeProps : undefined;\n  return _jsx(GestureComponent, _objectSpread(_objectSpread({}, gestureProps), {}, {\n    children: _jsxs(View, {\n      style: [style.current.container, propsStyle],\n      testID: testID,\n      accessibilityElementsHidden: accessibilityElementsHidden,\n      importantForAccessibility: importantForAccessibility,\n      children: [renderHeader(), renderMonth()]\n    })\n  }));\n};\nexport default Calendar;\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = _objectSpread(_objectSpread(_objectSpread({}, CalendarHeader.propTypes), Day.propTypes), {}, {\n  theme: PropTypes.object,\n  firstDay: PropTypes.number,\n  displayLoadingIndicator: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n  current: PropTypes.string,\n  initialDate: PropTypes.string,\n  minDate: PropTypes.string,\n  maxDate: PropTypes.string,\n  markedDates: PropTypes.object,\n  hideExtraDays: PropTypes.bool,\n  showSixWeeks: PropTypes.bool,\n  onDayPress: PropTypes.func,\n  onDayLongPress: PropTypes.func,\n  onMonthChange: PropTypes.func,\n  onVisibleMonthsChange: PropTypes.func,\n  disableMonthChange: PropTypes.bool,\n  enableSwipeMonths: PropTypes.bool,\n  disabledByDefault: PropTypes.bool,\n  headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  customHeader: PropTypes.any,\n  allowSelectionOutOfRange: PropTypes.bool\n});","map":{"version":3,"names":["PropTypes","XDate","isEmpty","React","useRef","useState","useEffect","useCallback","useMemo","GestureRecognizer","swipeDirections","constants","page","isGTE","isLTE","sameMonth","xdateToData","parseDate","toMarkingFormat","getState","extractHeaderProps","extractDayProps","useDidUpdate","styleConstructor","CalendarHeader","Day","BasicDay","Calendar","props","initialDate","current","theme","markedDates","minDate","maxDate","allowSelectionOutOfRange","onDayPress","onDayLongPress","onMonthChange","onVisibleMonthsChange","disableMonthChange","enableSwipeMonths","hideExtraDays","firstDay","showSixWeeks","displayLoadingIndicator","customHeader","headerStyle","accessibilityElementsHidden","importantForAccessibility","testID","propsStyle","style","currentMonth","setCurrentMonth","header","weekNumberMarking","disabled","disableTouchEvent","_currentMonth","clone","updateMonth","newMonth","addMonth","count","addMonths","handleDayInteraction","date","interaction","day","dateString","_onDayPress","onLongPressDay","onSwipeLeft","onPressRight","onSwipeRight","onPressLeft","onSwipe","gestureName","SWIPE_UP","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","isRTL","renderWeekNumber","weekNumber","dayContainer","renderDay","id","dayProps","emptyDayContainer","isControlled","context","renderWeek","days","week","forEach","id2","push","showWeekNumbers","unshift","length","getWeek","renderMonth","shouldShowSixWeeks","weeks","splice","monthView","shouldDisplayIndicator","lastMonthOfDay","setDate","addDays","renderHeader","headerProps","ref","undefined","CustomHeader","HeaderComponent","GestureComponent","View","swipeProps","direction","gestureProps","container","displayName","propTypes","object","number","bool","oneOfType","array","string","func","disabledByDefault","any"],"sources":["/project/home/saltbul/workspace/node_modules/react-native-calendars/src/calendar/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport isEmpty from 'lodash/isEmpty';\nimport React, { useRef, useState, useEffect, useCallback, useMemo } from 'react';\nimport { View } from 'react-native';\n// @ts-expect-error\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport constants from '../commons/constants';\nimport { page, isGTE, isLTE, sameMonth } from '../dateutils';\nimport { xdateToData, parseDate, toMarkingFormat } from '../interface';\nimport { getState } from '../day-state-manager';\nimport { extractHeaderProps, extractDayProps } from '../componentUpdater';\nimport { useDidUpdate } from '../hooks';\nimport styleConstructor from './style';\nimport CalendarHeader from './header';\nimport Day from './day/index';\nimport BasicDay from './day/basic';\n/**\n * @description: Calendar component\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendars.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/assets/calendar.gif\n */\nconst Calendar = (props) => {\n    const { initialDate, current, theme, markedDates, minDate, maxDate, allowSelectionOutOfRange, onDayPress, onDayLongPress, onMonthChange, onVisibleMonthsChange, disableMonthChange, enableSwipeMonths, hideExtraDays, firstDay, showSixWeeks, displayLoadingIndicator, customHeader, headerStyle, accessibilityElementsHidden, importantForAccessibility, testID, style: propsStyle } = props;\n    const [currentMonth, setCurrentMonth] = useState(current || initialDate ? parseDate(current || initialDate) : new XDate());\n    const style = useRef(styleConstructor(theme));\n    const header = useRef();\n    const weekNumberMarking = useRef({ disabled: true, disableTouchEvent: true });\n    useEffect(() => {\n        if (initialDate) {\n            setCurrentMonth(parseDate(initialDate));\n        }\n    }, [initialDate]);\n    useDidUpdate(() => {\n        const _currentMonth = currentMonth.clone();\n        onMonthChange?.(xdateToData(_currentMonth));\n        onVisibleMonthsChange?.([xdateToData(_currentMonth)]);\n    }, [currentMonth]);\n    const updateMonth = useCallback((newMonth) => {\n        if (sameMonth(newMonth, currentMonth)) {\n            return;\n        }\n        setCurrentMonth(newMonth);\n    }, [currentMonth]);\n    const addMonth = useCallback((count) => {\n        const newMonth = currentMonth.clone().addMonths(count, true);\n        updateMonth(newMonth);\n    }, [currentMonth, updateMonth]);\n    const handleDayInteraction = useCallback((date, interaction) => {\n        const day = new XDate(date.dateString);\n        if (allowSelectionOutOfRange || !(minDate && !isGTE(day, new XDate(minDate))) && !(maxDate && !isLTE(day, new XDate(maxDate)))) {\n            if (!disableMonthChange) {\n                updateMonth(day);\n            }\n            if (interaction) {\n                interaction(date);\n            }\n        }\n    }, [minDate, maxDate, allowSelectionOutOfRange, disableMonthChange, updateMonth]);\n    const _onDayPress = useCallback((date) => {\n        if (date)\n            handleDayInteraction(date, onDayPress);\n    }, [handleDayInteraction, onDayPress]);\n    const onLongPressDay = useCallback((date) => {\n        if (date)\n            handleDayInteraction(date, onDayLongPress);\n    }, [handleDayInteraction, onDayLongPress]);\n    const onSwipeLeft = useCallback(() => {\n        // @ts-expect-error\n        header.current?.onPressRight();\n    }, [header]);\n    const onSwipeRight = useCallback(() => {\n        // @ts-expect-error\n        header.current?.onPressLeft();\n    }, [header]);\n    const onSwipe = useCallback((gestureName) => {\n        const { SWIPE_UP, SWIPE_DOWN, SWIPE_LEFT, SWIPE_RIGHT } = swipeDirections;\n        switch (gestureName) {\n            case SWIPE_UP:\n            case SWIPE_DOWN:\n                break;\n            case SWIPE_LEFT:\n                constants.isRTL ? onSwipeRight() : onSwipeLeft();\n                break;\n            case SWIPE_RIGHT:\n                constants.isRTL ? onSwipeLeft() : onSwipeRight();\n                break;\n        }\n    }, [onSwipeLeft, onSwipeRight]);\n    const renderWeekNumber = (weekNumber) => {\n        return (<View style={style.current.dayContainer} key={`week-container-${weekNumber}`}>\n        <BasicDay key={`week-${weekNumber}`} marking={weekNumberMarking.current} \n        // state='disabled'\n        theme={theme} testID={`${testID}.weekNumber_${weekNumber}`}>\n          {weekNumber}\n        </BasicDay>\n      </View>);\n    };\n    const renderDay = (day, id) => {\n        const dayProps = extractDayProps(props);\n        if (!sameMonth(day, currentMonth) && hideExtraDays) {\n            return <View key={id} style={style.current.emptyDayContainer}/>;\n        }\n        const dateString = toMarkingFormat(day);\n        const isControlled = isEmpty(props.context);\n        return (<View style={style.current.dayContainer} key={id}>\n        <Day {...dayProps} testID={`${testID}.day_${dateString}`} date={dateString} state={getState(day, currentMonth, props, isControlled)} marking={markedDates?.[dateString]} onPress={_onDayPress} onLongPress={onLongPressDay}/>\n      </View>);\n    };\n    const renderWeek = (days, id) => {\n        const week = [];\n        days.forEach((day, id2) => {\n            week.push(renderDay(day, id2));\n        }, this);\n        if (props.showWeekNumbers) {\n            week.unshift(renderWeekNumber(days[days.length - 1].getWeek()));\n        }\n        return (<View style={style.current.week} key={id}>\n        {week}\n      </View>);\n    };\n    const renderMonth = () => {\n        const shouldShowSixWeeks = showSixWeeks && !hideExtraDays;\n        const days = page(currentMonth, firstDay, shouldShowSixWeeks);\n        const weeks = [];\n        while (days.length) {\n            weeks.push(renderWeek(days.splice(0, 7), weeks.length));\n        }\n        return <View style={style.current.monthView}>{weeks}</View>;\n    };\n    const shouldDisplayIndicator = useMemo(() => {\n        if (currentMonth) {\n            const lastMonthOfDay = toMarkingFormat(currentMonth.clone().addMonths(1, true).setDate(1).addDays(-1));\n            if (displayLoadingIndicator && !markedDates?.[lastMonthOfDay]) {\n                return true;\n            }\n        }\n        return false;\n    }, [currentMonth, displayLoadingIndicator, markedDates]);\n    const renderHeader = () => {\n        const headerProps = extractHeaderProps(props);\n        const ref = customHeader ? undefined : header;\n        const CustomHeader = customHeader;\n        const HeaderComponent = customHeader ? CustomHeader : CalendarHeader;\n        return (<HeaderComponent {...headerProps} testID={`${testID}.header`} style={headerStyle} ref={ref} month={currentMonth} addMonth={addMonth} displayLoadingIndicator={shouldDisplayIndicator}/>);\n    };\n    const GestureComponent = enableSwipeMonths ? GestureRecognizer : View;\n    const swipeProps = {\n        onSwipe: (direction) => onSwipe(direction)\n    };\n    const gestureProps = enableSwipeMonths ? swipeProps : undefined;\n    return (<GestureComponent {...gestureProps}>\n      <View style={[style.current.container, propsStyle]} testID={testID} accessibilityElementsHidden={accessibilityElementsHidden} // iOS\n     importantForAccessibility={importantForAccessibility} // Android\n    >\n        {renderHeader()}\n        {renderMonth()}\n      </View>\n    </GestureComponent>);\n};\nexport default Calendar;\nCalendar.displayName = 'Calendar';\nCalendar.propTypes = {\n    ...CalendarHeader.propTypes,\n    ...Day.propTypes,\n    theme: PropTypes.object,\n    firstDay: PropTypes.number,\n    displayLoadingIndicator: PropTypes.bool,\n    showWeekNumbers: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.number]),\n    current: PropTypes.string,\n    initialDate: PropTypes.string,\n    minDate: PropTypes.string,\n    maxDate: PropTypes.string,\n    markedDates: PropTypes.object,\n    hideExtraDays: PropTypes.bool,\n    showSixWeeks: PropTypes.bool,\n    onDayPress: PropTypes.func,\n    onDayLongPress: PropTypes.func,\n    onMonthChange: PropTypes.func,\n    onVisibleMonthsChange: PropTypes.func,\n    disableMonthChange: PropTypes.bool,\n    enableSwipeMonths: PropTypes.bool,\n    disabledByDefault: PropTypes.bool,\n    headerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    customHeader: PropTypes.any,\n    allowSelectionOutOfRange: PropTypes.bool\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}