{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport { HomeScreen, Task } from \"./Components/Tasks\";\nimport { ModuleStack } from \"./Components/Modules\";\nimport AddModule from \"./Components/AddModule\";\nimport { ColorProvider } from 'react-native-color-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nfunction TabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-checkmark-circle' : 'ios-checkmark-circle-outline';\n          } else if (route.name === 'Module') {\n            iconName = focused ? 'list-circle' : 'list-circle-outline';\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            screenOptions: {}\n          });\n        },\n        tabBarActiveTintColor: '#ff69b4',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Module\",\n      component: ModuleStack\n    })]\n  });\n}\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(TabNavigator, {})\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","createStackNavigator","Ionicons","HomeScreen","Task","ModuleStack","AddModule","ColorProvider","Tab","TabNavigator","route","headerShown","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","App"],"sources":["/project/home/saltbul/workspace/App.js"],"sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport { HomeScreen, Task } from './Components/Tasks';\nimport { ModuleStack } from './Components/Modules';\nimport AddModule from './Components/AddModule';\nimport { ColorProvider } from 'react-native-color-picker';\n\n\nconst Tab = createBottomTabNavigator()\n\nfunction TabNavigator() {\n  return (\n    <Tab.Navigator screenOptions={({ route }) => ({\n      headerShown: false,\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n\n        if (route.name === 'Home') {\n          iconName = focused\n            ? 'ios-checkmark-circle'\n            : 'ios-checkmark-circle-outline';\n        } else if (route.name === 'Module') {\n          iconName = focused ? 'list-circle' : 'list-circle-outline';\n        } \n\n        // You can return any component that you like here!\n        return <Ionicons name={iconName} size={size} color={color} screenOptions={{}} />;\n      },\n      tabBarActiveTintColor: '#ff69b4',\n      tabBarInactiveTintColor: 'gray',\n    })\n    }>\n      <Tab.Screen name=\"Home\" component={HomeScreen} />\n      <Tab.Screen name=\"Module\" component={ModuleStack} />\n    </Tab.Navigator>\n  )\n}\n\n\nexport default function App() {\n \n  return (\n    <NavigationContainer>\n      <TabNavigator />\n    </NavigationContainer>\n  );\n}\n\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAAA;AAAA;AAE1B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,QAAQ;AACf,SAASC,UAAU,EAAEC,IAAI;AACzB,SAASC,WAAW;AACpB,OAAOC,SAAS;AAChB,SAASC,aAAa,QAAQ,2BAA2B;AAAC;AAAA;AAG1D,IAAMC,GAAG,GAAGR,wBAAwB,EAAE;AAEtC,SAASS,YAAY,GAAG;EACtB,OACE,MAAC,GAAG,CAAC,SAAS;IAAC,aAAa,EAAE;MAAA,IAAGC,KAAK,QAALA,KAAK;MAAA,OAAQ;QAC5CC,WAAW,EAAE,KAAK;QAClBC,UAAU,EAAE,2BAA8B;UAAA,IAA3BC,OAAO,SAAPA,OAAO;YAAEC,KAAK,SAALA,KAAK;YAAEC,IAAI,SAAJA,IAAI;UACjC,IAAIC,QAAQ;UAEZ,IAAIN,KAAK,CAACO,IAAI,KAAK,MAAM,EAAE;YACzBD,QAAQ,GAAGH,OAAO,GACd,sBAAsB,GACtB,8BAA8B;UACpC,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,QAAQ,EAAE;YAClCD,QAAQ,GAAGH,OAAO,GAAG,aAAa,GAAG,qBAAqB;UAC5D;;UAGA,OAAO,KAAC,QAAQ;YAAC,IAAI,EAAEG,QAAS;YAAC,IAAI,EAAED,IAAK;YAAC,KAAK,EAAED,KAAM;YAAC,aAAa,EAAE,CAAC;UAAE,EAAG;QAClF,CAAC;QACDI,qBAAqB,EAAE,SAAS;QAChCC,uBAAuB,EAAE;MAC3B,CAAC;IAAA,CACA;IAAA,WACC,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAEhB;IAAW,EAAG,EACjD,KAAC,GAAG,CAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAEE;IAAY,EAAG;EAAA,EACtC;AAEpB;AAGA,eAAe,SAASe,GAAG,GAAG;EAE5B,OACE,KAAC,mBAAmB;IAAA,UAClB,KAAC,YAAY;EAAG,EACI;AAE1B"},"metadata":{},"sourceType":"module"}