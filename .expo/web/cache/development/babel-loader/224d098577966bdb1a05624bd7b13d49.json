{"ast":null,"code":"import React, { useContext } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport AddTask from \"./AddTask\";\nimport AddModule from \"./AddModule\";\nimport RoundedRectangles from \"./ModuleTasks\";\nimport CTask from \"./completedTask\";\nimport { ModuleContext } from \"./Context\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction ModulesBoxes(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(ModuleContext),\n    moduleItems = _useContext.moduleItems,\n    setModuleItems = _useContext.setModuleItems;\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: moduleItems,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(TouchableOpacity, {\n          style: [styles.box, {\n            backgroundColor: \"pink\"\n          }],\n          onPress: function onPress() {\n            return navigation.navigate(\"IndivTasks\");\n          },\n          children: _jsxs(Text, {\n            style: styles.moduleName,\n            children: [\" \", item.moduleName]\n          })\n        });\n      }\n    })\n  });\n}\nexport function Modules(_ref3) {\n  var navigation = _ref3.navigation;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.taskWrapper,\n      children: _jsxs(View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          top: 50\n        },\n        children: [_jsx(TouchableOpacity, {\n          style: styles.box,\n          onPress: function onPress() {\n            return navigation.navigate(\"CompletedTasks\");\n          },\n          activeOpacity: 0.6,\n          children: _jsx(Text, {\n            style: {\n              fontSize: 23,\n              color: \"#32CD32\"\n            },\n            children: \"Completed\"\n          })\n        }), _jsx(ModulesBoxes, {\n          navigation: navigation\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.addTaskWrapper,\n      children: _jsx(AddModule, {})\n    })]\n  });\n}\nfunction CompletedTasks(_ref4) {\n  var navigation = _ref4.navigation,\n    route = _ref4.route;\n  return _jsx(View, {\n    style: styles.taskWrapper,\n    children: _jsx(ScrollView, {\n      children: _jsxs(View, {\n        children: [_jsx(CTask, {\n          text: \"Assignment 2\",\n          label: \"JAVA\"\n        }), _jsx(CTask, {\n          text: \"Task 1\",\n          label: \"MAD\"\n        }), _jsx(CTask, {\n          text: \"CA 3\",\n          label: \"DEUI\"\n        }), _jsx(View, {})]\n      })\n    })\n  });\n}\nfunction IndivTasks() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ScrollView, {\n      children: _jsx(View, {\n        children: _jsx(RoundedRectangles, {\n          rectangles: [{\n            text: \"Practical 1\",\n            radius: 25,\n            width: \"90%\"\n          }, {\n            text: \"Practical 2\",\n            radius: 25,\n            width: \"90%\"\n          }, {\n            text: \"Practical 3\",\n            radius: 25,\n            width: \"90%\"\n          }, {\n            text: \"Practical 4\",\n            radius: 25,\n            width: \"90%\"\n          }]\n        })\n      })\n    }), _jsx(View, {\n      children: _jsx(AddTask, {})\n    })]\n  });\n}\nvar Stack = createStackNavigator();\nexport var ModuleStack = function ModuleStack() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: true\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Modules\",\n      component: Modules\n    }), _jsx(Stack.Screen, {\n      name: \"CompletedTasks\",\n      component: CompletedTasks,\n      options: {\n        title: \"Completed Tasks\",\n        headerStyle: {\n          backgroundColor: \"#32CD32\"\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"IndivTasks\",\n      component: IndivTasks,\n      options: {\n        title: \"Tasks\",\n        headerStyle: {\n          backgroundColor: \"pink\"\n        }\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  box: {\n    width: 380,\n    height: 80,\n    backgroundColor: \"#E8E8E8\",\n    borderRadius: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: 10\n  },\n  moduleName: {\n    fontSize: 25\n  },\n  moduleWrapper: {\n    marginBottom: 0\n  },\n  taskWrapper: {\n    marginBottom: 0\n  },\n  addTaskWrapper: {\n    position: \"absolute\",\n    bottom: 80,\n    right: 80\n  }\n});","map":{"version":3,"names":["React","useContext","createStackNavigator","FontAwesome5","AddTask","AddModule","RoundedRectangles","CTask","ModuleContext","ModulesBoxes","navigation","moduleItems","setModuleItems","item","styles","box","backgroundColor","navigate","moduleName","Modules","container","taskWrapper","alignItems","justifyContent","top","fontSize","color","addTaskWrapper","CompletedTasks","route","IndivTasks","text","radius","width","Stack","ModuleStack","headerShown","title","headerStyle","StyleSheet","create","flex","height","borderRadius","margin","moduleWrapper","marginBottom","position","bottom","right"],"sources":["/project/home/saltbul/workspace/Components/Modules.js"],"sourcesContent":["import React, { useContext } from \"react\";\nimport {\n  TouchableOpacity,\n  Pressable,\n  ScrollView,\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  Modal,\n  FlatList,\n} from \"react-native\";\n\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport FontAwesome5 from \"react-native-vector-icons/FontAwesome5\";\nimport AddTask from \"./AddTask\";\nimport AddModule from \"./AddModule\";\nimport RoundedRectangles from \"./ModuleTasks\";\nimport CTask from \"./completedTask\";\nimport { ModuleContext } from \"./Context\";\n\nfunction ModulesBoxes({ navigation }) {\n  const { moduleItems, setModuleItems } = useContext(ModuleContext);\n  return (\n    <View>\n      <FlatList\n        data={moduleItems}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            style={[styles.box, { backgroundColor: \"pink\" }]}\n            onPress={() => navigation.navigate(\"IndivTasks\")}\n          >\n            <Text style={styles.moduleName}> {item.moduleName}</Text>\n          </TouchableOpacity>\n        )}\n      />\n    </View>\n  );\n}\n\nexport function Modules({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <View style={styles.taskWrapper}>\n        <View\n          style={{ alignItems: \"center\", justifyContent: \"center\", top: 50 }}\n        >\n          <TouchableOpacity\n            style={styles.box}\n            onPress={() => navigation.navigate(\"CompletedTasks\")}\n            activeOpacity={0.6}\n          >\n            <Text style={{ fontSize: 23, color: \"#32CD32\" }}>Completed</Text>\n          </TouchableOpacity>\n\n          <ModulesBoxes navigation={navigation} />\n        </View>\n      </View>\n      <View style={styles.addTaskWrapper}>\n        <AddModule />\n      </View>\n    </View>\n  );\n}\n\nfunction CompletedTasks({ navigation, route }) {\n  return (\n    <View style={styles.taskWrapper}>\n      <ScrollView>\n        <View>\n          {/*This is where the tasks will go*/}\n          <CTask text={\"Assignment 2\"} label=\"JAVA\" />\n          <CTask text={\"Task 1\"} label=\"MAD\" />\n          <CTask text={\"CA 3\"} label=\"DEUI\" />\n          <View></View>\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction IndivTasks() {\n  return (\n    <View style={styles.container}>\n      <ScrollView>\n        <View>\n          <RoundedRectangles\n            rectangles={[\n              { text: \"Practical 1\", radius: 25, width: \"90%\" },\n              { text: \"Practical 2\", radius: 25, width: \"90%\" },\n              { text: \"Practical 3\", radius: 25, width: \"90%\" },\n              { text: \"Practical 4\", radius: 25, width: \"90%\" },\n            ]}\n          />\n        </View>\n      </ScrollView>\n      <View>\n        <AddTask />\n      </View>\n    </View>\n  );\n}\n\nconst Stack = createStackNavigator();\nexport const ModuleStack = () => {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: true }}>\n      <Stack.Screen name=\"Modules\" component={Modules} />\n      <Stack.Screen\n        name=\"CompletedTasks\"\n        component={CompletedTasks}\n        options={{\n          title: \"Completed Tasks\",\n          headerStyle: {\n            backgroundColor: \"#32CD32\",\n          },\n        }}\n      />\n\n      <Stack.Screen\n        name=\"IndivTasks\"\n        component={IndivTasks}\n        options={{\n          title: \"Tasks\",\n          headerStyle: {\n            backgroundColor: \"pink\",\n          },\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n  },\n  box: {\n    width: 380,\n    height: 80,\n    backgroundColor: \"#E8E8E8\",\n    borderRadius: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    margin: 10,\n  },\n  moduleName: {\n    fontSize: 25,\n  },\n  moduleWrapper: {\n    marginBottom: 0,\n  },\n  taskWrapper: {\n    marginBottom: 0,\n  },\n  addTaskWrapper: {\n    position: \"absolute\",\n    bottom: 80,\n    right: 80,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}