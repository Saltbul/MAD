{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport React from \"react\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport { Slider } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport tinycolor from \"tinycolor2\";\nimport { createPanResponder } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HoloColorPicker = function (_super) {\n  __extends(HoloColorPicker, _super);\n  function HoloColorPicker(props, ctx) {\n    var _this = _super.call(this, props, ctx) || this;\n    _this._handleColorChange = function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      var _b = _this._getColor(),\n        s = _b.s,\n        v = _b.v;\n      var marginLeft = (_this._layout.width - _this.state.pickerSize) / 2;\n      var marginTop = (_this._layout.height - _this.state.pickerSize) / 2;\n      var relativeX = x - _this._pageX - marginLeft;\n      var relativeY = y - _this._pageY - marginTop;\n      var h = _this._computeHValue(relativeX, relativeY);\n      _this._onColorChange({\n        h: h,\n        s: s,\n        v: v\n      });\n      return true;\n    };\n    var state = {\n      color: {\n        h: 0,\n        s: 1,\n        v: 1\n      },\n      pickerSize: null\n    };\n    if (props.oldColor) {\n      state.color = tinycolor(props.oldColor).toHsv();\n    }\n    if (props.defaultColor) {\n      state.color = tinycolor(props.defaultColor).toHsv();\n    }\n    _this.state = state;\n    _this._layout = {\n      width: 0,\n      height: 0,\n      x: 0,\n      y: 0\n    };\n    _this._pageX = 0;\n    _this._pageY = 0;\n    _this._onLayout = _this._onLayout.bind(_this);\n    _this._onSValueChange = _this._onSValueChange.bind(_this);\n    _this._onVValueChange = _this._onVValueChange.bind(_this);\n    _this._onColorSelected = _this._onColorSelected.bind(_this);\n    _this._onOldColorSelected = _this._onOldColorSelected.bind(_this);\n    _this._isRTL = I18nManager.isRTL;\n    _this._pickerResponder = createPanResponder({\n      onStart: _this._handleColorChange,\n      onMove: _this._handleColorChange\n    });\n    return _this;\n  }\n  HoloColorPicker.prototype._getColor = function () {\n    var passedColor = typeof this.props.color === \"string\" ? tinycolor(this.props.color).toHsv() : this.props.color;\n    return passedColor || this.state.color;\n  };\n  HoloColorPicker.prototype._onColorSelected = function () {\n    var onColorSelected = this.props.onColorSelected;\n    var color = tinycolor(this._getColor()).toHexString();\n    onColorSelected && onColorSelected(color);\n  };\n  HoloColorPicker.prototype._onOldColorSelected = function () {\n    var _a = this.props,\n      oldColor = _a.oldColor,\n      onOldColorSelected = _a.onOldColorSelected;\n    var color = tinycolor(oldColor);\n    this.setState({\n      color: color.toHsv()\n    });\n    onOldColorSelected && onOldColorSelected(color.toHexString());\n  };\n  HoloColorPicker.prototype._onSValueChange = function (s) {\n    var _a = this._getColor(),\n      h = _a.h,\n      v = _a.v;\n    this._onColorChange({\n      h: h,\n      s: s,\n      v: v\n    });\n  };\n  HoloColorPicker.prototype._onVValueChange = function (v) {\n    var _a = this._getColor(),\n      h = _a.h,\n      s = _a.s;\n    this._onColorChange({\n      h: h,\n      s: s,\n      v: v\n    });\n  };\n  HoloColorPicker.prototype._onColorChange = function (color) {\n    this.setState({\n      color: color\n    });\n    if (this.props.onColorChange) {\n      this.props.onColorChange(color);\n    }\n  };\n  HoloColorPicker.prototype._onLayout = function (l) {\n    var _this = this;\n    this._layout = l.nativeEvent.layout;\n    var _a = this._layout,\n      width = _a.width,\n      height = _a.height;\n    var pickerSize = Math.min(width, height);\n    if (this.state.pickerSize !== pickerSize) {\n      this.setState({\n        pickerSize: pickerSize\n      });\n    }\n    InteractionManager.runAfterInteractions(function () {\n      _this.refs.pickerContainer && _this.refs.pickerContainer.measure(function (x, y, width, height, pageX, pageY) {\n        _this._pageX = pageX;\n        _this._pageY = pageY;\n      });\n    });\n  };\n  HoloColorPicker.prototype._computeHValue = function (x, y) {\n    var mx = this.state.pickerSize / 2;\n    var my = this.state.pickerSize / 2;\n    var dx = x - mx;\n    var dy = y - my;\n    var rad = Math.atan2(dx, dy) + Math.PI + Math.PI / 2;\n    return rad * 180 / Math.PI % 360;\n  };\n  HoloColorPicker.prototype._hValueToRad = function (deg) {\n    var rad = deg * Math.PI / 180;\n    return rad - Math.PI - Math.PI / 2;\n  };\n  HoloColorPicker.prototype._getSlider = function () {\n    if (this.props.hideSliders) {\n      return undefined;\n    }\n    if (this.props.sliderComponent) {\n      return this.props.sliderComponent;\n    }\n    if (!Slider) {\n      throw new Error(\"You need to install `@react-native-community/slider` and pass it (or any other Slider compatible component) as `sliderComponent` prop\");\n    }\n    return Slider;\n  };\n  HoloColorPicker.prototype.getColor = function () {\n    return tinycolor(this._getColor()).toHexString();\n  };\n  HoloColorPicker.prototype.render = function () {\n    var pickerSize = this.state.pickerSize;\n    var _a = this.props,\n      oldColor = _a.oldColor,\n      style = _a.style;\n    var color = this._getColor();\n    var h = color.h,\n      s = color.s,\n      v = color.v;\n    var angle = this._hValueToRad(h);\n    var selectedColor = tinycolor(color).toHexString();\n    var indicatorColor = tinycolor({\n      h: h,\n      s: 1,\n      v: 1\n    }).toHexString();\n    var computed = makeComputedStyles({\n      pickerSize: pickerSize,\n      selectedColor: selectedColor,\n      indicatorColor: indicatorColor,\n      oldColor: oldColor,\n      angle: angle,\n      isRTL: this._isRTL\n    });\n    var SliderComp = this._getSlider();\n    return _jsxs(View, {\n      style: style,\n      children: [_jsx(View, {\n        onLayout: this._onLayout,\n        ref: \"pickerContainer\",\n        style: styles.pickerContainer,\n        children: !pickerSize ? null : _jsxs(View, {\n          children: [_jsxs(View, _objectSpread(_objectSpread({}, this._pickerResponder.panHandlers), {}, {\n            style: [computed.picker],\n            collapsable: false,\n            children: [_jsx(Image, {\n              source: require(\"../resources/color-circle.png\"),\n              resizeMode: \"contain\",\n              style: [styles.pickerImage]\n            }), _jsx(View, {\n              style: [styles.pickerIndicator, computed.pickerIndicator]\n            })]\n          })), oldColor && _jsx(TouchableOpacity, {\n            style: [styles.selectedPreview, computed.selectedPreview],\n            onPress: this._onColorSelected,\n            activeOpacity: 0.7\n          }), oldColor && _jsx(TouchableOpacity, {\n            style: [styles.originalPreview, computed.originalPreview],\n            onPress: this._onOldColorSelected,\n            activeOpacity: 0.7\n          }), !oldColor && _jsx(TouchableOpacity, {\n            style: [styles.selectedFullPreview, computed.selectedFullPreview],\n            onPress: this._onColorSelected,\n            activeOpacity: 0.7\n          })]\n        })\n      }), this.props.hideSliders ? null : _jsxs(View, {\n        children: [_jsx(SliderComp, {\n          value: s,\n          onValueChange: this._onSValueChange\n        }), _jsx(SliderComp, {\n          value: v,\n          onValueChange: this._onVValueChange\n        })]\n      })]\n    });\n  };\n  return HoloColorPicker;\n}(React.PureComponent);\nexport { HoloColorPicker };\nvar makeComputedStyles = function makeComputedStyles(_a) {\n  var _b;\n  var indicatorColor = _a.indicatorColor,\n    selectedColor = _a.selectedColor,\n    oldColor = _a.oldColor,\n    angle = _a.angle,\n    pickerSize = _a.pickerSize,\n    isRTL = _a.isRTL;\n  var summarySize = 0.5 * pickerSize;\n  var indicatorPickerRatio = 42 / 510;\n  var indicatorSize = indicatorPickerRatio * pickerSize;\n  var pickerPadding = indicatorSize / 3;\n  var indicatorRadius = pickerSize / 2 - indicatorSize / 2 - pickerPadding;\n  var mx = pickerSize / 2;\n  var my = pickerSize / 2;\n  var dx = Math.cos(angle) * indicatorRadius;\n  var dy = Math.sin(angle) * indicatorRadius;\n  return {\n    picker: {\n      padding: pickerPadding,\n      width: pickerSize,\n      height: pickerSize\n    },\n    pickerIndicator: (_b = {\n      top: mx + dx - indicatorSize / 2\n    }, _b[isRTL ? \"right\" : \"left\"] = my + dy - indicatorSize / 2, _b.width = indicatorSize, _b.height = indicatorSize, _b.borderRadius = indicatorSize / 2, _b.backgroundColor = indicatorColor, _b),\n    selectedPreview: {\n      width: summarySize / 2,\n      height: summarySize,\n      top: pickerSize / 2 - summarySize / 2,\n      left: Math.floor(pickerSize / 2),\n      borderTopRightRadius: summarySize / 2,\n      borderBottomRightRadius: summarySize / 2,\n      backgroundColor: selectedColor\n    },\n    originalPreview: {\n      width: Math.ceil(summarySize / 2),\n      height: summarySize,\n      top: pickerSize / 2 - summarySize / 2,\n      left: pickerSize / 2 - summarySize / 2,\n      borderTopLeftRadius: summarySize / 2,\n      borderBottomLeftRadius: summarySize / 2,\n      backgroundColor: oldColor\n    },\n    selectedFullPreview: {\n      width: summarySize,\n      height: summarySize,\n      top: pickerSize / 2 - summarySize / 2,\n      left: pickerSize / 2 - summarySize / 2,\n      borderRadius: summarySize / 2,\n      backgroundColor: selectedColor\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  pickerContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  pickerImage: {\n    flex: 1,\n    width: null,\n    height: null\n  },\n  pickerIndicator: {\n    position: \"absolute\",\n    shadowColor: \"black\",\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      width: 3,\n      height: 3\n    },\n    shadowRadius: 4,\n    elevation: 5\n  },\n  selectedPreview: {\n    position: \"absolute\",\n    borderLeftWidth: 0\n  },\n  originalPreview: {\n    position: \"absolute\",\n    borderRightWidth: 0\n  },\n  selectedFullPreview: {\n    position: \"absolute\"\n  },\n  pickerAlignment: {\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"mappings":"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","names":["React","Slider","tinycolor","createPanResponder","__extends","props","ctx","_super","_this","_a","x","y","_getColor","s","v","marginLeft","_layout","width","state","pickerSize","marginTop","height","relativeX","_pageX","relativeY","_pageY","h","_computeHValue","_onColorChange","color","oldColor","toHsv","defaultColor","_onLayout","bind","_onSValueChange","_onVValueChange","_onColorSelected","_onOldColorSelected","_isRTL","I18nManager","isRTL","_pickerResponder","onStart","_handleColorChange","onMove","HoloColorPicker","passedColor","toHexString","onColorSelected","onOldColorSelected","setState","onColorChange","l","nativeEvent","layout","Math","min","InteractionManager","runAfterInteractions","refs","pickerContainer","measure","pageX","pageY","mx","my","dx","dy","rad","atan2","PI","deg","hideSliders","undefined","sliderComponent","Error","style","angle","_hValueToRad","selectedColor","indicatorColor","computed","makeComputedStyles","SliderComp","_getSlider","styles","panHandlers","picker","require","pickerImage","pickerIndicator","selectedPreview","originalPreview","selectedFullPreview","PureComponent","summarySize","indicatorPickerRatio","indicatorSize","pickerPadding","indicatorRadius","cos","sin","padding","top","_b","left","floor","borderTopRightRadius","borderBottomRightRadius","backgroundColor","ceil","borderTopLeftRadius","borderBottomLeftRadius","borderRadius","StyleSheet","create","flex","alignItems","justifyContent","position","shadowColor","shadowOpacity","shadowOffset","shadowRadius","elevation","borderLeftWidth","borderRightWidth","pickerAlignment"],"sourceRoot":"","sources":["../src/HoloColorPicker.tsx"],"sourcesContent":["import React from \"react\"\nimport {\n  I18nManager,\n  Image,\n  InteractionManager,\n  PanResponderInstance,\n  Slider,\n  StyleSheet,\n  TouchableOpacity,\n  View,\n} from \"react-native\"\nimport tinycolor from \"tinycolor2\"\n\nimport { HsvColor, IPickerProps, Point2D } from \"./typeHelpers\"\nimport { createPanResponder } from \"./utils\"\n\ntype SliderProps = {\n  onValueChange?: (value: number) => void;\n  value?: number;\n};\n\nexport interface IHoloPickerProps extends IPickerProps {\n  sliderComponent?: React.Component<SliderProps>;\n}\n\nexport type IHoloPickerState = {\n  color: HsvColor;\n  pickerSize: number;\n};\n\nexport class HoloColorPicker extends React.PureComponent<\n  IHoloPickerProps,\n  IHoloPickerState\n> {\n  private _layout: { width: number; height: number; x: number; y: number };\n  private _pageX: number;\n  private _pageY: number;\n  private _isRTL: boolean;\n  private _pickerResponder: PanResponderInstance;\n\n  constructor(props: IHoloPickerProps, ctx: any) {\n    super(props, ctx)\n    const state = {\n      color: { h: 0, s: 1, v: 1 },\n      pickerSize: null,\n    }\n    if (props.oldColor) {\n      state.color = tinycolor(props.oldColor).toHsv()\n    }\n    if (props.defaultColor) {\n      state.color = tinycolor(props.defaultColor).toHsv()\n    }\n    this.state = state\n    this._layout = { width: 0, height: 0, x: 0, y: 0 }\n    this._pageX = 0\n    this._pageY = 0\n    this._onLayout = this._onLayout.bind(this)\n    this._onSValueChange = this._onSValueChange.bind(this)\n    this._onVValueChange = this._onVValueChange.bind(this)\n    this._onColorSelected = this._onColorSelected.bind(this)\n    this._onOldColorSelected = this._onOldColorSelected.bind(this)\n    this._isRTL = I18nManager.isRTL\n    this._pickerResponder = createPanResponder({\n      onStart: this._handleColorChange,\n      onMove: this._handleColorChange,\n    })\n  }\n\n  _getColor() {\n    const passedColor =\n      typeof this.props.color === \"string\"\n        ? tinycolor(this.props.color).toHsv()\n        : this.props.color\n    return passedColor || this.state.color\n  }\n\n  _onColorSelected() {\n    const { onColorSelected } = this.props\n    const color = tinycolor(this._getColor()).toHexString()\n    onColorSelected && onColorSelected(color)\n  }\n\n  _onOldColorSelected() {\n    const { oldColor, onOldColorSelected } = this.props\n    const color = tinycolor(oldColor)\n    this.setState({ color: color.toHsv() })\n    onOldColorSelected && onOldColorSelected(color.toHexString())\n  }\n\n  _onSValueChange(s: number) {\n    const { h, v } = this._getColor()\n    this._onColorChange({ h, s, v })\n  }\n\n  _onVValueChange(v: number) {\n    const { h, s } = this._getColor()\n    this._onColorChange({ h, s, v })\n  }\n\n  _onColorChange(color: { h: number; s: any; v: any }) {\n    this.setState({ color })\n    if (this.props.onColorChange) {\n      this.props.onColorChange(color)\n    }\n  }\n\n  _onLayout(l: {\n    nativeEvent: {\n      layout: { width: number; height: number; x: number; y: number };\n    };\n  }) {\n    this._layout = l.nativeEvent.layout\n    const { width, height } = this._layout\n    const pickerSize = Math.min(width, height)\n    if (this.state.pickerSize !== pickerSize) {\n      this.setState({ pickerSize })\n    }\n    // layout.x, layout.y is always 0\n    // we always measure because layout is the same even though picker is moved on the page\n    InteractionManager.runAfterInteractions(() => {\n      // measure only after (possible) animation ended\n      this.refs.pickerContainer &&\n        (this.refs.pickerContainer as any).measure(\n          (\n            x: number,\n            y: number,\n            width: number,\n            height: number,\n            pageX: number,\n            pageY: number\n          ) => {\n            // picker position in the screen\n            this._pageX = pageX\n            this._pageY = pageY\n          }\n        )\n    })\n  }\n\n  _handleColorChange = ({ x, y }: Point2D) => {\n    const { s, v } = this._getColor()\n    const marginLeft = (this._layout.width - this.state.pickerSize) / 2\n    const marginTop = (this._layout.height - this.state.pickerSize) / 2\n    const relativeX = x - this._pageX - marginLeft\n    const relativeY = y - this._pageY - marginTop\n    const h = this._computeHValue(relativeX, relativeY)\n    this._onColorChange({ h, s, v })\n\n    return true\n  };\n\n  _computeHValue(x: number, y: number) {\n    const mx = this.state.pickerSize / 2\n    const my = this.state.pickerSize / 2\n    const dx = x - mx\n    const dy = y - my\n    const rad = Math.atan2(dx, dy) + Math.PI + Math.PI / 2\n    return ((rad * 180) / Math.PI) % 360\n  }\n\n  _hValueToRad(deg: number) {\n    const rad = (deg * Math.PI) / 180\n    return rad - Math.PI - Math.PI / 2\n  }\n\n  _getSlider(): typeof Slider {\n    if (this.props.hideSliders) {\n      return undefined\n    }\n\n    if (this.props.sliderComponent) {\n      return this.props.sliderComponent as any\n    }\n\n    if (!Slider) {\n      throw new Error(\n        \"You need to install `@react-native-community/slider` and pass it (or any other Slider compatible component) as `sliderComponent` prop\"\n      )\n    }\n\n    return Slider\n  }\n\n  getColor() {\n    return tinycolor(this._getColor()).toHexString()\n  }\n\n  render() {\n    const { pickerSize } = this.state\n    const { oldColor, style } = this.props\n\n    const color = this._getColor()\n    const { h, s, v } = color\n    const angle = this._hValueToRad(h)\n    const selectedColor = tinycolor(color).toHexString()\n    const indicatorColor = tinycolor({ h, s: 1, v: 1 }).toHexString()\n\n    const computed = makeComputedStyles({\n      pickerSize,\n      selectedColor,\n      indicatorColor,\n      oldColor,\n      angle,\n      isRTL: this._isRTL,\n    })\n\n    const SliderComp = this._getSlider()\n\n    return (\n      <View style={style}>\n        <View\n          onLayout={this._onLayout}\n          ref=\"pickerContainer\"\n          style={styles.pickerContainer}\n        >\n          {!pickerSize ? null : (\n            <View>\n              <View\n                {...this._pickerResponder.panHandlers}\n                style={[computed.picker]}\n                collapsable={false}\n              >\n                <Image\n                  source={require(\"../resources/color-circle.png\")}\n                  resizeMode=\"contain\"\n                  style={[styles.pickerImage]}\n                />\n                <View\n                  style={[styles.pickerIndicator, computed.pickerIndicator]}\n                />\n              </View>\n              {oldColor && (\n                <TouchableOpacity\n                  style={[styles.selectedPreview, computed.selectedPreview]}\n                  onPress={this._onColorSelected}\n                  activeOpacity={0.7}\n                />\n              )}\n              {oldColor && (\n                <TouchableOpacity\n                  style={[styles.originalPreview, computed.originalPreview]}\n                  onPress={this._onOldColorSelected}\n                  activeOpacity={0.7}\n                />\n              )}\n              {!oldColor && (\n                <TouchableOpacity\n                  style={[\n                    styles.selectedFullPreview,\n                    computed.selectedFullPreview,\n                  ]}\n                  onPress={this._onColorSelected}\n                  activeOpacity={0.7}\n                />\n              )}\n            </View>\n          )}\n        </View>\n        {this.props.hideSliders ? null : (\n          <View>\n            <SliderComp value={s} onValueChange={this._onSValueChange} />\n            <SliderComp value={v} onValueChange={this._onVValueChange} />\n          </View>\n        )}\n      </View>\n    )\n  }\n}\n\nconst makeComputedStyles = ({\n  indicatorColor,\n  selectedColor,\n  oldColor,\n  angle,\n  pickerSize,\n  isRTL,\n}) => {\n  const summarySize = 0.5 * pickerSize\n  const indicatorPickerRatio = 42 / 510 // computed from picker image\n  const indicatorSize = indicatorPickerRatio * pickerSize\n  const pickerPadding = indicatorSize / 3\n  const indicatorRadius = pickerSize / 2 - indicatorSize / 2 - pickerPadding\n  const mx = pickerSize / 2\n  const my = pickerSize / 2\n  const dx = Math.cos(angle) * indicatorRadius\n  const dy = Math.sin(angle) * indicatorRadius\n  return {\n    picker: {\n      padding: pickerPadding,\n      width: pickerSize,\n      height: pickerSize,\n    },\n    pickerIndicator: {\n      top: mx + dx - indicatorSize / 2,\n      [isRTL ? \"right\" : \"left\"]: my + dy - indicatorSize / 2,\n      width: indicatorSize,\n      height: indicatorSize,\n      borderRadius: indicatorSize / 2,\n      backgroundColor: indicatorColor,\n    },\n    selectedPreview: {\n      width: summarySize / 2,\n      height: summarySize,\n      top: pickerSize / 2 - summarySize / 2,\n      left: Math.floor(pickerSize / 2),\n      borderTopRightRadius: summarySize / 2,\n      borderBottomRightRadius: summarySize / 2,\n      backgroundColor: selectedColor,\n    },\n    originalPreview: {\n      width: Math.ceil(summarySize / 2),\n      height: summarySize,\n      top: pickerSize / 2 - summarySize / 2,\n      left: pickerSize / 2 - summarySize / 2,\n      borderTopLeftRadius: summarySize / 2,\n      borderBottomLeftRadius: summarySize / 2,\n      backgroundColor: oldColor,\n    },\n    selectedFullPreview: {\n      width: summarySize,\n      height: summarySize,\n      top: pickerSize / 2 - summarySize / 2,\n      left: pickerSize / 2 - summarySize / 2,\n      borderRadius: summarySize / 2,\n      backgroundColor: selectedColor,\n    },\n  }\n}\n\nconst styles = StyleSheet.create({\n  pickerContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  pickerImage: {\n    flex: 1,\n    width: null,\n    height: null,\n  },\n  pickerIndicator: {\n    position: \"absolute\",\n    // Shadow only works on iOS.\n    shadowColor: \"black\",\n    shadowOpacity: 0.3,\n    shadowOffset: { width: 3, height: 3 },\n    shadowRadius: 4,\n\n    // This will elevate the view on Android, causing shadow to be drawn.\n    elevation: 5,\n  },\n  selectedPreview: {\n    position: \"absolute\",\n    borderLeftWidth: 0,\n  },\n  originalPreview: {\n    position: \"absolute\",\n    borderRightWidth: 0,\n  },\n  selectedFullPreview: {\n    position: \"absolute\",\n  },\n  pickerAlignment: {\n    alignItems: \"center\",\n  },\n})\n"]},"metadata":{},"sourceType":"module"}