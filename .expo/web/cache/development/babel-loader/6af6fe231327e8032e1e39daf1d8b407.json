{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport React from \"react\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport tinycolor from \"tinycolor2\";\nimport { createPanResponder, rotatePoint } from \"./utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction makeRotationKey(props, angle) {\n  var rotationHackFactor = props.rotationHackFactor;\n  if (rotationHackFactor < 1) {\n    return undefined;\n  }\n  var key = Math.floor(angle * rotationHackFactor);\n  return \"r\" + key;\n}\nvar TriangleColorPicker = function (_super) {\n  __extends(TriangleColorPicker, _super);\n  function TriangleColorPicker(props, ctx) {\n    var _this = _super.call(this, props, ctx) || this;\n    _this._handleColorChange = function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      if (_this._changingHColor) {\n        _this._handleHColorChange({\n          x: x,\n          y: y\n        });\n      } else {\n        _this._handleSVColorChange({\n          x: x,\n          y: y\n        });\n      }\n      return true;\n    };\n    var state = {\n      color: {\n        h: 0,\n        s: 1,\n        v: 1\n      },\n      pickerSize: null\n    };\n    if (props.oldColor) {\n      state.color = tinycolor(props.oldColor).toHsv();\n    }\n    if (props.defaultColor) {\n      state.color = tinycolor(props.defaultColor).toHsv();\n    }\n    _this.state = state;\n    _this._layout = {\n      width: 0,\n      height: 0,\n      x: 0,\n      y: 0\n    };\n    _this._pageX = 0;\n    _this._pageY = 0;\n    _this._onLayout = _this._onLayout.bind(_this);\n    _this._onSValueChange = _this._onSValueChange.bind(_this);\n    _this._onVValueChange = _this._onVValueChange.bind(_this);\n    _this._onColorSelected = _this._onColorSelected.bind(_this);\n    _this._onOldColorSelected = _this._onOldColorSelected.bind(_this);\n    _this._isRTL = I18nManager.isRTL;\n    _this._pickerResponder = createPanResponder({\n      onStart: function onStart(_a) {\n        var x = _a.x,\n          y = _a.y;\n        var _b = _this._computeColorFromTriangle({\n            x: x,\n            y: y\n          }),\n          s = _b.s,\n          v = _b.v;\n        _this._changingHColor = s > 1 || s < 0 || v > 1 || v < 0;\n        _this._handleColorChange({\n          x: x,\n          y: y\n        });\n        return true;\n      },\n      onMove: _this._handleColorChange\n    });\n    return _this;\n  }\n  TriangleColorPicker.prototype._getColor = function () {\n    var passedColor = typeof this.props.color === \"string\" ? tinycolor(this.props.color).toHsv() : this.props.color;\n    return passedColor || this.state.color;\n  };\n  TriangleColorPicker.prototype._onColorSelected = function () {\n    var onColorSelected = this.props.onColorSelected;\n    var color = tinycolor(this._getColor()).toHexString();\n    onColorSelected && onColorSelected(color);\n  };\n  TriangleColorPicker.prototype._onOldColorSelected = function () {\n    var _a = this.props,\n      oldColor = _a.oldColor,\n      onOldColorSelected = _a.onOldColorSelected;\n    var color = tinycolor(oldColor);\n    this.setState({\n      color: color.toHsv()\n    });\n    onOldColorSelected && onOldColorSelected(color.toHexString());\n  };\n  TriangleColorPicker.prototype._onSValueChange = function (s) {\n    var _a = this._getColor(),\n      h = _a.h,\n      v = _a.v;\n    this._onColorChange({\n      h: h,\n      s: s,\n      v: v\n    });\n  };\n  TriangleColorPicker.prototype._onVValueChange = function (v) {\n    var _a = this._getColor(),\n      h = _a.h,\n      s = _a.s;\n    this._onColorChange({\n      h: h,\n      s: s,\n      v: v\n    });\n  };\n  TriangleColorPicker.prototype._onColorChange = function (color) {\n    this.setState({\n      color: color\n    });\n    if (this.props.onColorChange) {\n      this.props.onColorChange(color);\n    }\n  };\n  TriangleColorPicker.prototype._onLayout = function (l) {\n    var _this = this;\n    this._layout = l.nativeEvent.layout;\n    var _a = this._layout,\n      width = _a.width,\n      height = _a.height;\n    var pickerSize = Math.min(width, height);\n    if (this.state.pickerSize !== pickerSize) {\n      this.setState({\n        pickerSize: pickerSize\n      });\n    }\n    InteractionManager.runAfterInteractions(function () {\n      _this.refs.pickerContainer && _this.refs.pickerContainer.measure(function (x, y, width, height, pageX, pageY) {\n        _this._pageX = pageX;\n        _this._pageY = pageY;\n      });\n    });\n  };\n  TriangleColorPicker.prototype._computeHValue = function (x, y) {\n    var mx = this.state.pickerSize / 2;\n    var my = this.state.pickerSize / 2;\n    var dx = x - mx;\n    var dy = y - my;\n    var rad = Math.atan2(dx, dy) + Math.PI + Math.PI / 2;\n    return rad * 180 / Math.PI % 360;\n  };\n  TriangleColorPicker.prototype._hValueToRad = function (deg) {\n    var rad = deg * Math.PI / 180;\n    return rad - Math.PI - Math.PI / 2;\n  };\n  TriangleColorPicker.prototype.getColor = function () {\n    return tinycolor(this._getColor()).toHexString();\n  };\n  TriangleColorPicker.prototype._handleHColorChange = function (_a) {\n    var x = _a.x,\n      y = _a.y;\n    var _b = this._getColor(),\n      s = _b.s,\n      v = _b.v;\n    var marginLeft = (this._layout.width - this.state.pickerSize) / 2;\n    var marginTop = (this._layout.height - this.state.pickerSize) / 2;\n    var relativeX = x - this._pageX - marginLeft;\n    var relativeY = y - this._pageY - marginTop;\n    var h = this._computeHValue(relativeX, relativeY);\n    this._onColorChange({\n      h: h,\n      s: s,\n      v: v\n    });\n  };\n  TriangleColorPicker.prototype._handleSVColorChange = function (_a) {\n    var x = _a.x,\n      y = _a.y;\n    var _b = this._computeColorFromTriangle({\n        x: x,\n        y: y\n      }),\n      h = _b.h,\n      rawS = _b.s,\n      rawV = _b.v;\n    var s = Math.min(Math.max(0, rawS), 1);\n    var v = Math.min(Math.max(0, rawV), 1);\n    this._onColorChange({\n      h: h,\n      s: s,\n      v: v\n    });\n  };\n  TriangleColorPicker.prototype._normalizeTriangleTouch = function (s, v, sRatio) {\n    var CORNER_ZONE_SIZE = 0.12;\n    var NORMAL_MARGIN = 0.1;\n    var CORNER_MARGIN = 0.05;\n    var margin = NORMAL_MARGIN;\n    var posNS = v > 0 ? 1 - (1 - s) * sRatio : 1 - s * sRatio;\n    var negNS = v > 0 ? s * sRatio : (1 - s) * sRatio;\n    var ns = s > 1 ? posNS : negNS;\n    var rightCorner = s > 1 - CORNER_ZONE_SIZE && v > 1 - CORNER_ZONE_SIZE;\n    var leftCorner = ns < 0 + CORNER_ZONE_SIZE && v > 1 - CORNER_ZONE_SIZE;\n    var topCorner = ns < 0 + CORNER_ZONE_SIZE && v < 0 + CORNER_ZONE_SIZE;\n    if (rightCorner) {\n      return {\n        s: s,\n        v: v\n      };\n    }\n    if (leftCorner || topCorner) {\n      margin = CORNER_MARGIN;\n    }\n    s = s < 0 && ns > 0 - margin ? 0 : s;\n    s = s > 1 && ns < 1 + margin ? 1 : s;\n    v = v < 0 && v > 0 - margin ? 0 : v;\n    v = v > 1 && v < 1 + margin ? 1 : v;\n    return {\n      s: s,\n      v: v\n    };\n  };\n  TriangleColorPicker.prototype._computeColorFromTriangle = function (_a) {\n    var x = _a.x,\n      y = _a.y;\n    var pickerSize = this.state.pickerSize;\n    var _b = getPickerProperties(pickerSize),\n      triangleHeight = _b.triangleHeight,\n      triangleWidth = _b.triangleWidth;\n    var left = pickerSize / 2 - triangleWidth / 2;\n    var top = pickerSize / 2 - 2 * triangleHeight / 3;\n    var marginLeft = (this._layout.width - this.state.pickerSize) / 2;\n    var marginTop = (this._layout.height - this.state.pickerSize) / 2;\n    var relativeX = x - this._pageX - marginLeft - left;\n    var relativeY = y - this._pageY - marginTop - top;\n    var h = this._getColor().h;\n    var deg = (h - 330 + 360) % 360;\n    var rad = deg * Math.PI / 180;\n    var center = {\n      x: triangleWidth / 2,\n      y: 2 * triangleHeight / 3\n    };\n    var rotated = rotatePoint({\n      x: relativeX,\n      y: relativeY\n    }, rad, center);\n    var line = triangleWidth * rotated.y / triangleHeight;\n    var margin = triangleWidth / 2 - triangleWidth / 2 * rotated.y / triangleHeight;\n    var s = (rotated.x - margin) / line;\n    var v = rotated.y / triangleHeight;\n    var normalized = this._normalizeTriangleTouch(s, v, line / triangleHeight);\n    return {\n      h: h,\n      s: normalized.s,\n      v: normalized.v\n    };\n  };\n  TriangleColorPicker.prototype.render = function () {\n    var pickerSize = this.state.pickerSize;\n    var _a = this.props,\n      oldColor = _a.oldColor,\n      style = _a.style;\n    var color = this._getColor();\n    var h = color.h;\n    var angle = this._hValueToRad(h);\n    var selectedColor = tinycolor(color).toHexString();\n    var indicatorColor = tinycolor({\n      h: h,\n      s: 1,\n      v: 1\n    }).toHexString();\n    var computed = makeComputedStyles({\n      pickerSize: pickerSize,\n      selectedColorHsv: color,\n      indicatorColor: indicatorColor,\n      angle: angle,\n      isRTL: this._isRTL\n    });\n    var rotationHack = makeRotationKey(this.props, angle);\n    return _jsxs(View, {\n      style: style,\n      children: [_jsx(View, {\n        onLayout: this._onLayout,\n        ref: \"pickerContainer\",\n        style: styles.pickerContainer,\n        children: !pickerSize ? null : _jsxs(View, {\n          children: [_jsxs(View, {\n            style: [styles.triangleContainer, computed.triangleContainer],\n            children: [_jsx(View, {\n              style: [styles.triangleUnderlayingColor, computed.triangleUnderlayingColor]\n            }), _jsx(Image, {\n              style: [computed.triangleImage],\n              source: require(\"../resources/hsv_triangle_mask.png\")\n            })]\n          }, rotationHack), _jsxs(View, _objectSpread(_objectSpread({}, this._pickerResponder.panHandlers), {}, {\n            style: [computed.picker],\n            collapsable: false,\n            children: [_jsx(Image, {\n              source: require(\"../resources/color-circle.png\"),\n              resizeMode: \"contain\",\n              style: [styles.pickerImage]\n            }), _jsx(View, {\n              style: [styles.pickerIndicator, computed.pickerIndicator],\n              children: _jsx(View, {\n                style: [styles.pickerIndicatorTick, computed.pickerIndicatorTick]\n              })\n            }, rotationHack), _jsx(View, {\n              style: [styles.svIndicator, computed.svIndicator]\n            })]\n          }))]\n        })\n      }), this.props.hideControls == true ? null : _jsxs(View, {\n        style: [styles.colorPreviews, computed.colorPreviews],\n        children: [oldColor && _jsx(TouchableOpacity, {\n          style: [styles.colorPreview, {\n            backgroundColor: oldColor\n          }],\n          onPress: this._onOldColorSelected,\n          activeOpacity: 0.7\n        }), _jsx(TouchableOpacity, {\n          style: [styles.colorPreview, {\n            backgroundColor: selectedColor\n          }],\n          onPress: this._onColorSelected,\n          activeOpacity: 0.7\n        })]\n      })]\n    });\n  };\n  TriangleColorPicker.defaultProps = {\n    rotationHackFactor: 100\n  };\n  return TriangleColorPicker;\n}(React.PureComponent);\nexport { TriangleColorPicker };\nfunction getPickerProperties(pickerSize) {\n  var indicatorPickerRatio = 42 / 510;\n  var originalIndicatorSize = indicatorPickerRatio * pickerSize;\n  var indicatorSize = originalIndicatorSize;\n  var pickerPadding = originalIndicatorSize / 3;\n  var triangleSize = pickerSize - 6 * pickerPadding;\n  var triangleRadius = triangleSize / 2;\n  var triangleHeight = triangleRadius * 3 / 2;\n  var triangleWidth = 2 * triangleRadius * Math.sqrt(3 / 4);\n  return {\n    triangleSize: triangleSize,\n    triangleRadius: triangleRadius,\n    triangleHeight: triangleHeight,\n    triangleWidth: triangleWidth,\n    indicatorPickerRatio: indicatorPickerRatio,\n    indicatorSize: indicatorSize,\n    pickerPadding: pickerPadding\n  };\n}\nvar makeComputedStyles = function makeComputedStyles(_a) {\n  var _b, _c;\n  var indicatorColor = _a.indicatorColor,\n    angle = _a.angle,\n    pickerSize = _a.pickerSize,\n    selectedColorHsv = _a.selectedColorHsv,\n    isRTL = _a.isRTL;\n  var _d = getPickerProperties(pickerSize),\n    triangleSize = _d.triangleSize,\n    triangleHeight = _d.triangleHeight,\n    triangleWidth = _d.triangleWidth,\n    indicatorSize = _d.indicatorSize,\n    pickerPadding = _d.pickerPadding;\n  var indicatorRadius = pickerSize / 2 - indicatorSize / 2 - pickerPadding;\n  var mx = pickerSize / 2;\n  var my = pickerSize / 2;\n  var dx = Math.cos(angle) * indicatorRadius;\n  var dy = Math.sin(angle) * indicatorRadius;\n  var triangleTop = pickerPadding * 3;\n  var triangleLeft = pickerPadding * 3;\n  var triangleAngle = -angle + Math.PI / 3;\n  var markerColor = \"rgba(0,0,0,0.8)\";\n  var s = selectedColorHsv.s,\n    v = selectedColorHsv.v,\n    h = selectedColorHsv.h;\n  var svIndicatorSize = 18;\n  var svY = v * triangleHeight;\n  var margin = triangleWidth / 2 - v * (triangleWidth / 2);\n  var svX = s * (triangleWidth - 2 * margin) + margin;\n  var svIndicatorMarginLeft = (pickerSize - triangleWidth) / 2;\n  var svIndicatorMarginTop = (pickerSize - 4 * triangleHeight / 3) / 2;\n  var deg = (h - 330 + 360) % 360;\n  var rad = deg * Math.PI / 180;\n  var center = {\n    x: pickerSize / 2,\n    y: pickerSize / 2\n  };\n  var notRotatedPoint = {\n    x: svIndicatorMarginTop + svY,\n    y: svIndicatorMarginLeft + svX\n  };\n  var svIndicatorPoint = rotatePoint(notRotatedPoint, rad, center);\n  return {\n    picker: {\n      padding: pickerPadding,\n      width: pickerSize,\n      height: pickerSize\n    },\n    pickerIndicator: (_b = {\n      top: mx + dx - indicatorSize / 2\n    }, _b[isRTL ? \"right\" : \"left\"] = my + dy - indicatorSize / 2, _b.width = indicatorSize, _b.height = indicatorSize, _b.transform = [{\n      rotate: -angle + \"rad\"\n    }], _b),\n    pickerIndicatorTick: {\n      height: indicatorSize / 2,\n      backgroundColor: markerColor\n    },\n    svIndicator: (_c = {\n      top: svIndicatorPoint.x - svIndicatorSize / 2\n    }, _c[isRTL ? \"right\" : \"left\"] = svIndicatorPoint.y - svIndicatorSize / 2, _c.width = svIndicatorSize, _c.height = svIndicatorSize, _c.borderRadius = svIndicatorSize / 2, _c.borderColor = markerColor, _c),\n    triangleContainer: {\n      width: triangleSize,\n      height: triangleSize,\n      transform: [{\n        rotate: triangleAngle + \"rad\"\n      }],\n      top: triangleTop,\n      left: triangleLeft\n    },\n    triangleImage: {\n      width: triangleWidth,\n      height: triangleHeight\n    },\n    triangleUnderlayingColor: {\n      left: (triangleSize - triangleWidth) / 2,\n      borderLeftWidth: triangleWidth / 2,\n      borderRightWidth: triangleWidth / 2,\n      borderBottomWidth: triangleHeight,\n      borderBottomColor: indicatorColor\n    },\n    colorPreviews: {\n      height: pickerSize * 0.1\n    }\n  };\n};\nvar styles = StyleSheet.create({\n  pickerContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  pickerImage: {\n    flex: 1,\n    width: null,\n    height: null\n  },\n  pickerIndicator: {\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  triangleContainer: {\n    position: \"absolute\",\n    alignItems: \"center\"\n  },\n  triangleUnderlayingColor: {\n    position: \"absolute\",\n    top: 0,\n    width: 0,\n    height: 0,\n    backgroundColor: \"transparent\",\n    borderStyle: \"solid\",\n    borderLeftColor: \"transparent\",\n    borderRightColor: \"transparent\"\n  },\n  pickerAlignment: {\n    alignItems: \"center\"\n  },\n  svIndicator: {\n    position: \"absolute\",\n    borderWidth: 4\n  },\n  pickerIndicatorTick: {\n    width: 5\n  },\n  colorPreviews: {\n    flexDirection: \"row\"\n  },\n  colorPreview: {\n    flex: 1\n  }\n});","map":{"version":3,"mappings":"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","names":["React","tinycolor","createPanResponder","rotatePoint","makeRotationKey","props","angle","rotationHackFactor","undefined","key","Math","floor","__extends","ctx","_super","_this","_a","x","y","_changingHColor","_handleHColorChange","_handleSVColorChange","state","color","h","s","v","pickerSize","oldColor","toHsv","defaultColor","_layout","width","height","_pageX","_pageY","_onLayout","bind","_onSValueChange","_onVValueChange","_onColorSelected","_onOldColorSelected","_isRTL","I18nManager","isRTL","_pickerResponder","onStart","_computeColorFromTriangle","_handleColorChange","onMove","TriangleColorPicker","passedColor","_getColor","toHexString","onColorSelected","onOldColorSelected","setState","_onColorChange","onColorChange","l","nativeEvent","layout","min","InteractionManager","runAfterInteractions","refs","pickerContainer","measure","pageX","pageY","mx","my","dx","dy","rad","atan2","PI","deg","marginLeft","marginTop","relativeX","relativeY","_computeHValue","rawS","rawV","max","sRatio","CORNER_ZONE_SIZE","NORMAL_MARGIN","CORNER_MARGIN","margin","posNS","negNS","ns","rightCorner","leftCorner","topCorner","getPickerProperties","triangleHeight","triangleWidth","left","top","center","rotated","line","normalized","_normalizeTriangleTouch","style","_hValueToRad","selectedColor","indicatorColor","computed","makeComputedStyles","selectedColorHsv","rotationHack","styles","triangleContainer","triangleUnderlayingColor","triangleImage","require","panHandlers","picker","pickerImage","pickerIndicator","pickerIndicatorTick","svIndicator","hideControls","colorPreviews","colorPreview","backgroundColor","PureComponent","indicatorPickerRatio","originalIndicatorSize","indicatorSize","pickerPadding","triangleSize","triangleRadius","sqrt","indicatorRadius","cos","sin","triangleTop","triangleLeft","triangleAngle","markerColor","svIndicatorSize","svY","svX","svIndicatorMarginLeft","svIndicatorMarginTop","notRotatedPoint","svIndicatorPoint","padding","_b","rotate","_c","transform","borderLeftWidth","borderRightWidth","borderBottomWidth","borderBottomColor","StyleSheet","create","flex","alignItems","justifyContent","position","borderStyle","borderLeftColor","borderRightColor","pickerAlignment","borderWidth","flexDirection"],"sourceRoot":"","sources":["../src/TriangleColorPicker.tsx"],"sourcesContent":["import React from \"react\"\nimport {\n  I18nManager,\n  Image,\n  InteractionManager,\n  PanResponderInstance,\n  StyleSheet,\n  TouchableOpacity,\n  View,\n} from \"react-native\"\nimport tinycolor from \"tinycolor2\"\n\nimport { HsvColor, IPickerProps, Point2D } from \"./typeHelpers\"\nimport { createPanResponder, rotatePoint } from \"./utils\"\n\nfunction makeRotationKey(props: ITrianglePickerProps, angle: number) {\n  const { rotationHackFactor } = props\n\n  if (rotationHackFactor < 1) {\n    return undefined\n  }\n\n  const key = Math.floor(angle * rotationHackFactor)\n\n  return `r${key}`\n}\n\nexport interface ITrianglePickerProps extends IPickerProps {\n  rotationHackFactor?: number;\n  hideControls?: boolean;\n}\n\nexport type ITrianglePickerState = {\n  color: HsvColor;\n  pickerSize: number;\n};\n\nexport class TriangleColorPicker extends React.PureComponent<\n  ITrianglePickerProps,\n  ITrianglePickerState\n> {\n  private _layout: { width: number; height: number; x: number; y: number };\n  private _pageX: number;\n  private _pageY: number;\n  private _isRTL: boolean;\n  private _pickerResponder: PanResponderInstance;\n  private _changingHColor: boolean;\n\n  public static defaultProps: ITrianglePickerProps = {\n    rotationHackFactor: 100,\n  };\n\n  constructor(props: ITrianglePickerProps, ctx: any) {\n    super(props, ctx)\n\n    const state = {\n      color: { h: 0, s: 1, v: 1 },\n      pickerSize: null,\n    }\n\n    if (props.oldColor) {\n      state.color = tinycolor(props.oldColor).toHsv()\n    }\n\n    if (props.defaultColor) {\n      state.color = tinycolor(props.defaultColor).toHsv()\n    }\n\n    this.state = state\n    this._layout = { width: 0, height: 0, x: 0, y: 0 }\n    this._pageX = 0\n    this._pageY = 0\n    this._onLayout = this._onLayout.bind(this)\n    this._onSValueChange = this._onSValueChange.bind(this)\n    this._onVValueChange = this._onVValueChange.bind(this)\n    this._onColorSelected = this._onColorSelected.bind(this)\n    this._onOldColorSelected = this._onOldColorSelected.bind(this)\n    this._isRTL = I18nManager.isRTL\n\n    this._pickerResponder = createPanResponder({\n      onStart: ({ x, y }) => {\n        const { s, v } = this._computeColorFromTriangle({ x, y })\n        this._changingHColor = s > 1 || s < 0 || v > 1 || v < 0\n        this._handleColorChange({ x, y })\n\n        return true\n      },\n      onMove: this._handleColorChange,\n    })\n  }\n\n  _getColor() {\n    const passedColor =\n      typeof this.props.color === \"string\"\n        ? tinycolor(this.props.color).toHsv()\n        : this.props.color\n    return passedColor || this.state.color\n  }\n\n  _onColorSelected() {\n    const { onColorSelected } = this.props\n    const color = tinycolor(this._getColor()).toHexString()\n    onColorSelected && onColorSelected(color)\n  }\n\n  _onOldColorSelected() {\n    const { oldColor, onOldColorSelected } = this.props\n    const color = tinycolor(oldColor)\n    this.setState({ color: color.toHsv() })\n    onOldColorSelected && onOldColorSelected(color.toHexString())\n  }\n\n  _onSValueChange(s) {\n    const { h, v } = this._getColor()\n    this._onColorChange({ h, s, v })\n  }\n\n  _onVValueChange(v) {\n    const { h, s } = this._getColor()\n    this._onColorChange({ h, s, v })\n  }\n\n  _onColorChange(color) {\n    this.setState({ color })\n    if (this.props.onColorChange) {\n      this.props.onColorChange(color)\n    }\n  }\n\n  _onLayout(l) {\n    this._layout = l.nativeEvent.layout\n    const { width, height } = this._layout\n    const pickerSize = Math.min(width, height)\n    if (this.state.pickerSize !== pickerSize) {\n      this.setState({ pickerSize })\n    }\n    // layout.x, layout.y is always 0\n    // we always measure because layout is the same even though picker is moved on the page\n    InteractionManager.runAfterInteractions(() => {\n      // measure only after (possible) animation ended\n      this.refs.pickerContainer &&\n        (this.refs.pickerContainer as any).measure(\n          (x, y, width, height, pageX, pageY) => {\n            // picker position in the screen\n            this._pageX = pageX\n            this._pageY = pageY\n          }\n        )\n    })\n  }\n\n  _computeHValue(x: number, y: number) {\n    const mx = this.state.pickerSize / 2\n    const my = this.state.pickerSize / 2\n    const dx = x - mx\n    const dy = y - my\n    const rad = Math.atan2(dx, dy) + Math.PI + Math.PI / 2\n    return ((rad * 180) / Math.PI) % 360\n  }\n\n  _hValueToRad(deg: number) {\n    const rad = (deg * Math.PI) / 180\n    return rad - Math.PI - Math.PI / 2\n  }\n\n  getColor() {\n    return tinycolor(this._getColor()).toHexString()\n  }\n\n  _handleColorChange = ({ x, y }: Point2D) => {\n    if (this._changingHColor) {\n      this._handleHColorChange({ x, y })\n    } else {\n      this._handleSVColorChange({ x, y })\n    }\n\n    return true\n  };\n\n  _handleHColorChange({ x, y }: Point2D) {\n    const { s, v } = this._getColor()\n    const marginLeft = (this._layout.width - this.state.pickerSize) / 2\n    const marginTop = (this._layout.height - this.state.pickerSize) / 2\n    const relativeX = x - this._pageX - marginLeft\n    const relativeY = y - this._pageY - marginTop\n    const h = this._computeHValue(relativeX, relativeY)\n    this._onColorChange({ h, s, v })\n  }\n\n  _handleSVColorChange({ x, y }) {\n    const { h, s: rawS, v: rawV } = this._computeColorFromTriangle({ x, y })\n    const s = Math.min(Math.max(0, rawS), 1)\n    const v = Math.min(Math.max(0, rawV), 1)\n    this._onColorChange({ h, s, v })\n  }\n\n  _normalizeTriangleTouch(s, v, sRatio) {\n    const CORNER_ZONE_SIZE = 0.12 // relative size to be considered as corner zone\n    const NORMAL_MARGIN = 0.1 // relative triangle margin to be considered as touch in triangle\n    const CORNER_MARGIN = 0.05 // relative triangle margin to be considered as touch in triangle in corner zone\n    let margin = NORMAL_MARGIN\n\n    const posNS = v > 0 ? 1 - (1 - s) * sRatio : 1 - s * sRatio\n    const negNS = v > 0 ? s * sRatio : (1 - s) * sRatio\n    const ns = s > 1 ? posNS : negNS // normalized s value according to ratio and s value\n\n    const rightCorner = s > 1 - CORNER_ZONE_SIZE && v > 1 - CORNER_ZONE_SIZE\n    const leftCorner = ns < 0 + CORNER_ZONE_SIZE && v > 1 - CORNER_ZONE_SIZE\n    const topCorner = ns < 0 + CORNER_ZONE_SIZE && v < 0 + CORNER_ZONE_SIZE\n    if (rightCorner) {\n      return { s, v }\n    }\n    if (leftCorner || topCorner) {\n      margin = CORNER_MARGIN\n    }\n    // color normalization according to margin\n    s = s < 0 && ns > 0 - margin ? 0 : s\n    s = s > 1 && ns < 1 + margin ? 1 : s\n    v = v < 0 && v > 0 - margin ? 0 : v\n    v = v > 1 && v < 1 + margin ? 1 : v\n    return { s, v }\n  }\n\n  /**\n   * Computes s, v from position (x, y). If position is outside of triangle,\n   * it will return invalid values (greater than 1 or lower than 0)\n   */\n  _computeColorFromTriangle({ x, y }) {\n    const { pickerSize } = this.state\n    const { triangleHeight, triangleWidth } = getPickerProperties(pickerSize)\n\n    const left = pickerSize / 2 - triangleWidth / 2\n    const top = pickerSize / 2 - (2 * triangleHeight) / 3\n\n    // triangle relative coordinates\n    const marginLeft = (this._layout.width - this.state.pickerSize) / 2\n    const marginTop = (this._layout.height - this.state.pickerSize) / 2\n    const relativeX = x - this._pageX - marginLeft - left\n    const relativeY = y - this._pageY - marginTop - top\n\n    // rotation\n    const { h } = this._getColor()\n    const deg = (h - 330 + 360) % 360 // starting angle is 330 due to comfortable calculation\n    const rad = (deg * Math.PI) / 180\n    const center = {\n      x: triangleWidth / 2,\n      y: (2 * triangleHeight) / 3,\n    }\n    const rotated = rotatePoint({ x: relativeX, y: relativeY }, rad, center)\n\n    const line = (triangleWidth * rotated.y) / triangleHeight\n    const margin =\n      triangleWidth / 2 - ((triangleWidth / 2) * rotated.y) / triangleHeight\n    const s = (rotated.x - margin) / line\n    const v = rotated.y / triangleHeight\n\n    // normalize\n    const normalized = this._normalizeTriangleTouch(\n      s,\n      v,\n      line / triangleHeight\n    )\n\n    return { h, s: normalized.s, v: normalized.v }\n  }\n\n  render() {\n    const { pickerSize } = this.state\n    const { oldColor, style } = this.props\n    const color = this._getColor()\n    const { h } = color\n    const angle = this._hValueToRad(h)\n    const selectedColor = tinycolor(color).toHexString()\n    const indicatorColor = tinycolor({ h, s: 1, v: 1 }).toHexString()\n    const computed = makeComputedStyles({\n      pickerSize,\n      selectedColorHsv: color,\n      indicatorColor,\n      angle,\n      isRTL: this._isRTL,\n    })\n    // Hack for https://github.com/instea/react-native-color-picker/issues/17\n    const rotationHack = makeRotationKey(this.props, angle)\n    return (\n      <View style={style}>\n        <View\n          onLayout={this._onLayout}\n          ref=\"pickerContainer\"\n          style={styles.pickerContainer}\n        >\n          {!pickerSize ? null : (\n            <View>\n              <View\n                key={rotationHack}\n                style={[styles.triangleContainer, computed.triangleContainer]}\n              >\n                <View\n                  style={[\n                    styles.triangleUnderlayingColor,\n                    computed.triangleUnderlayingColor,\n                  ]}\n                />\n                <Image\n                  style={[computed.triangleImage]}\n                  source={require(\"../resources/hsv_triangle_mask.png\")}\n                />\n              </View>\n              <View\n                {...this._pickerResponder.panHandlers}\n                style={[computed.picker]}\n                collapsable={false}\n              >\n                <Image\n                  source={require(\"../resources/color-circle.png\")}\n                  resizeMode=\"contain\"\n                  style={[styles.pickerImage]}\n                />\n                <View\n                  key={rotationHack}\n                  style={[styles.pickerIndicator, computed.pickerIndicator]}\n                >\n                  <View\n                    style={[\n                      styles.pickerIndicatorTick,\n                      computed.pickerIndicatorTick,\n                    ]}\n                  />\n                </View>\n                <View style={[styles.svIndicator, computed.svIndicator]} />\n              </View>\n            </View>\n          )}\n        </View>\n        {this.props.hideControls == true ? null : (\n          <View style={[styles.colorPreviews, computed.colorPreviews]}>\n            {oldColor && (\n              <TouchableOpacity\n                style={[styles.colorPreview, { backgroundColor: oldColor }]}\n                onPress={this._onOldColorSelected}\n                activeOpacity={0.7}\n              />\n            )}\n            <TouchableOpacity\n              style={[styles.colorPreview, { backgroundColor: selectedColor }]}\n              onPress={this._onColorSelected}\n              activeOpacity={0.7}\n            />\n          </View>\n        )}\n      </View>\n    )\n  }\n}\n\nfunction getPickerProperties(pickerSize) {\n  const indicatorPickerRatio = 42 / 510 // computed from picker image\n  const originalIndicatorSize = indicatorPickerRatio * pickerSize\n  const indicatorSize = originalIndicatorSize\n  const pickerPadding = originalIndicatorSize / 3\n\n  const triangleSize = pickerSize - 6 * pickerPadding\n  const triangleRadius = triangleSize / 2\n  const triangleHeight = (triangleRadius * 3) / 2\n  const triangleWidth = 2 * triangleRadius * Math.sqrt(3 / 4) // pythagorean theorem\n\n  return {\n    triangleSize,\n    triangleRadius,\n    triangleHeight,\n    triangleWidth,\n    indicatorPickerRatio,\n    indicatorSize,\n    pickerPadding,\n  }\n}\n\nconst makeComputedStyles = ({\n  indicatorColor,\n  angle,\n  pickerSize,\n  selectedColorHsv,\n  isRTL,\n}) => {\n  const {\n    triangleSize,\n    triangleHeight,\n    triangleWidth,\n    indicatorSize,\n    pickerPadding,\n  } = getPickerProperties(pickerSize)\n\n  /* ===== INDICATOR ===== */\n  const indicatorRadius = pickerSize / 2 - indicatorSize / 2 - pickerPadding\n  const mx = pickerSize / 2\n  const my = pickerSize / 2\n  const dx = Math.cos(angle) * indicatorRadius\n  const dy = Math.sin(angle) * indicatorRadius\n\n  /* ===== TRIANGLE ===== */\n  const triangleTop = pickerPadding * 3\n  const triangleLeft = pickerPadding * 3\n  const triangleAngle = -angle + Math.PI / 3\n\n  /* ===== SV INDICATOR ===== */\n  const markerColor = \"rgba(0,0,0,0.8)\"\n  const { s, v, h } = selectedColorHsv\n  const svIndicatorSize = 18\n  const svY = v * triangleHeight\n  const margin = triangleWidth / 2 - v * (triangleWidth / 2)\n  const svX = s * (triangleWidth - 2 * margin) + margin\n  const svIndicatorMarginLeft = (pickerSize - triangleWidth) / 2\n  const svIndicatorMarginTop = (pickerSize - (4 * triangleHeight) / 3) / 2\n\n  const deg = (h - 330 + 360) % 360 // starting angle is 330 due to comfortable calculation\n  const rad = (deg * Math.PI) / 180\n  const center = { x: pickerSize / 2, y: pickerSize / 2 }\n  const notRotatedPoint = {\n    x: svIndicatorMarginTop + svY,\n    y: svIndicatorMarginLeft + svX,\n  }\n  const svIndicatorPoint = rotatePoint(notRotatedPoint, rad, center)\n\n  return {\n    picker: {\n      padding: pickerPadding,\n      width: pickerSize,\n      height: pickerSize,\n    },\n    pickerIndicator: {\n      top: mx + dx - indicatorSize / 2,\n      [isRTL ? \"right\" : \"left\"]: my + dy - indicatorSize / 2,\n      width: indicatorSize,\n      height: indicatorSize,\n      transform: [\n        {\n          rotate: -angle + \"rad\",\n        },\n      ],\n    },\n    pickerIndicatorTick: {\n      height: indicatorSize / 2,\n      backgroundColor: markerColor,\n    },\n    svIndicator: {\n      top: svIndicatorPoint.x - svIndicatorSize / 2,\n      [isRTL ? \"right\" : \"left\"]: svIndicatorPoint.y - svIndicatorSize / 2,\n      width: svIndicatorSize,\n      height: svIndicatorSize,\n      borderRadius: svIndicatorSize / 2,\n      borderColor: markerColor,\n    },\n    triangleContainer: {\n      width: triangleSize,\n      height: triangleSize,\n      transform: [\n        {\n          rotate: triangleAngle + \"rad\",\n        },\n      ],\n      top: triangleTop,\n      left: triangleLeft,\n    },\n    triangleImage: {\n      width: triangleWidth,\n      height: triangleHeight,\n    },\n    triangleUnderlayingColor: {\n      left: (triangleSize - triangleWidth) / 2,\n      borderLeftWidth: triangleWidth / 2,\n      borderRightWidth: triangleWidth / 2,\n      borderBottomWidth: triangleHeight,\n      borderBottomColor: indicatorColor,\n    },\n    colorPreviews: {\n      height: pickerSize * 0.1, // responsive height\n    },\n  }\n}\n\nconst styles = StyleSheet.create({\n  pickerContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  pickerImage: {\n    flex: 1,\n    width: null,\n    height: null,\n  },\n  pickerIndicator: {\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  triangleContainer: {\n    position: \"absolute\",\n    alignItems: \"center\",\n  },\n  triangleUnderlayingColor: {\n    position: \"absolute\",\n    top: 0,\n    width: 0,\n    height: 0,\n    backgroundColor: \"transparent\",\n    borderStyle: \"solid\",\n    borderLeftColor: \"transparent\",\n    borderRightColor: \"transparent\",\n  },\n  pickerAlignment: {\n    alignItems: \"center\",\n  },\n  svIndicator: {\n    position: \"absolute\",\n    borderWidth: 4,\n  },\n  pickerIndicatorTick: {\n    width: 5,\n  },\n  colorPreviews: {\n    flexDirection: \"row\",\n  },\n  colorPreview: {\n    flex: 1,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}